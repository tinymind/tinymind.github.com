<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[浮生猎趣]]></title>
  <link href="http://blog.lessfun.com/atom.xml" rel="self"/>
  <link href="http://blog.lessfun.com/"/>
  <updated>2014-12-16T21:10:02+08:00</updated>
  <id>http://blog.lessfun.com/</id>
  <author>
    <name><![CDATA[lslin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MarkText - iOS 上支持语法高亮、HTML预览、文件导出的Markdown文本编辑器]]></title>
    <link href="http://blog.lessfun.com/blog/2014/12/10/marktext-a-markdown-text-editor-for-ios/"/>
    <updated>2014-12-10T21:29:06+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/12/10/marktext-a-markdown-text-editor-for-ios</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://blog.lessfun.com/images/app/marktext/marktext_appicon.png" width="120" height="120" title="MarkText App" alt="A Markdown Text Editor"></p>

<p>MarkText是iPhone上的Markdown文本编辑器。支持实时语法高亮、带CSS的HTML预览、文件导出为HTML/PNG/PDF, 分享到Evernote，Dropbox或 Email。</p>

<p>当前版本：1.0.0<br/>
更新时间：2014.12.16</p>

<h2>iPhone 屏幕截图</h2>

<div style="margin-top:30px;font-size:16px;line-height:20px;background:rgb(78,81,85);border-radius:4px;padding:4px;">
<div style="margin: 0 14px; max-height: 640px; min-height: 320px; overflow-x: auto; overflow-y: hidden; padding-bottom: 16px; white-space: nowrap;"><img style="border:2px solid white;margin:5px;box-shadow:0 0 5px rgba(220,220,220,0.5);width:320px;" src="http://blog.lessfun.com/images/app/marktext/marktext_screenshot_1.png" alt="1"> <img style="border:2px solid white;margin:5px;box-shadow:0 0 5px rgba(220,220,220,0.5);width:320px;" src="http://blog.lessfun.com/images/app/marktext/marktext_screenshot_2.png" alt="2"> <img style="border:2px solid white;margin:5px;box-shadow:0 0 5px rgba(220,220,220,0.5);width:320px;" src="http://blog.lessfun.com/images/app/marktext/marktext_screenshot_3.png" alt="3"> <img style="border:2px solid white;margin:5px;box-shadow:0 0 5px rgba(220,220,220,0.5);width:320px;" src="http://blog.lessfun.com/images/app/marktext/marktext_screenshot_4.png" alt="4"> <img style="border:2px solid white;margin:5px;box-shadow:0 0 5px rgba(220,220,220,0.5);width:320px;" src="http://blog.lessfun.com/images/app/marktext/marktext_screenshot_5.png" alt="5"></div>
</div>


<h2>下载</h2>

<p><a href="https://itunes.apple.com/cn/app/marktext-markdown-text-editor/id948768793?mt=8"><img src="http://blog.lessfun.com/images/app/appstore.png" alt="从AppStore下载" /></a></p>

<h2>应用介绍</h2>

<!--more-->


<p>MarkText是iPhone上的一款Markdown文本编辑器.</p>

<h3>编辑 &amp; 分享</h3>

<p>通过MarkText，你可以导入或创建markdown格式的文本文件，编辑的时候支持实时语法高亮显示。
支持将markdown的纯文本转换为HTML、PNG或PDF文件。当编辑完成之后，你可以MD、HTML、PNG或PDF的格式将文稿分享出去。可以通过iTunes导出到电脑，或者发送到Evernote、Dropbox或Email。</p>

<h3>光标增强</h3>

<p>通过输入辅助工具条，你可以很方便地点击按钮插入Tabs、标题、列表、代码块，或者超链接。左右滑动工具条可以迅速移动光标；双指选择可以快速选择文本。</p>

<h3>HTML预览</h3>

<p>与语法高亮一样，你也可以使用CSS语法高亮地预览HTML内容。HTML预览支持以下语法特性：常规Markdown、MultiMarkdown、脚注、图片、表格和代码块。</p>

<h2>版本1.0.0 特性</h2>

<ul>
<li>创建、编辑markdown格式的文本；</li>
<li>实时语法高亮；</li>
<li>带有样式的HTML预览；</li>
<li>修改主题配色；</li>
<li>从iTunes导入文稿；</li>
<li>导出文稿为HTML、PNG和PDF格式的文件；</li>
<li>分享内容到Evernote、Dropbox和Email；</li>
<li>光标增强：滑动输入工具栏，快速移动光标；</li>
<li>支持的文件后缀类型：md、mmd、markdown、markdn、mdown、mkdn、markd、txt、text。</li>
</ul>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/12/10/marktext-a-markdown-text-editor-for-ios/'>http://blog.lessfun.com/blog/2014/12/10/marktext-a-markdown-text-editor-for-ios/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年在Apple Store申请iOS个人开发者账号详细流程]]></title>
    <link href="http://blog.lessfun.com/blog/2014/12/03/ios-developer-program-tutorial-2014/"/>
    <updated>2014-12-03T19:20:56+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/12/03/ios-developer-program-tutorial-2014</id>
    <content type="html"><![CDATA[<p><img src="http://blog.lessfun.com/images/2014/12/idp_intro.png" alt="idp intro" /></p>

<!--more-->


<p>想要在AppStore上发布个人App从来都不是一件简单的事，光是申请开发者账号就可以折腾好久了。这是加入个人开发者计划，申请iOS开发者账号的最新教程，2014年版，供参考。什么时候，苹果才能为开发者考虑一下，减少各种繁琐的流程呢？</p>

<h2>前期准备</h2>

<ul>
<li>需要有一张支持美元支付的信用卡。</li>
</ul>


<h2>注册Apple ID</h2>

<ol>
<li><p>访问<a href="https://developer.apple.com/cn/programs/ios/">https://developer.apple.com/cn/programs/ios/</a> ，点击<code>立即注册</code>。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_register.png" alt="apple register" /></p></li>
<li><p>按照提示，选择注册类型：公司或个人。这里以「个人」为例，点击继续。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_register_continue.png" alt="register continue" /></p></li>
<li><p>注册或创建Apple ID。如果已有，可以继续使用。我选了新建。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_create_apple_id.png" alt="create apple id" /></p></li>
<li><p>按照要求填写接口。需要注意的地方：FirstName 和 LastName 要是自己的名字拼音，由于涉及到审核、支付、收款等操作，不要乱填。另外，中英文的姓名顺序一直都可以把人绕晕，总之，我在 FirstName 填了名字拼音，在 LastName 填姓氏拼音。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_fill_apple_id.png" alt="fill apple id" /></p></li>
<li><p>设置安全问题答案，找回密码需要。</p></li>
<li>验证邮箱，之后就可以使用新的AppleID了，如果在上面填错了资料，可以登录修改，比如姓名。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_verify_email.png" alt="verify email" /></li>
</ol>


<h2>填写开发者信息</h2>

<ol>
<li><p>在协议这里打钩，点击<code>Agree</code>。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_develop_agreement.png" alt="develop agreement" /></p></li>
<li><p>完善个人的一些信息。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_self_info.png" alt="self info" /></p></li>
<li><p>至此，Apple ID创建完成。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_register_finished.png" alt="register finished" /></p></li>
</ol>


<h2>加入开发者计划</h2>

<ol>
<li><p>这时候已有新的Apple ID，再次打开<a href="https://developer.apple.com/programs/ios">https://developer.apple.com/programs/ios</a> ，正式加入$99/年的个人开发者计划。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_enroll_now.png" alt="enroll now" /></p></li>
<li><p>选择刚刚创建的Apple ID：<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_select_apple_id.png" alt="select apple id" /></p></li>
<li><p>提示选择注册类型，个人或公司。这里选择个人。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_select_individual.png" alt="select individual" /></p></li>
<li><p>输入账单地址等信息，这里需要与信用卡账单显示的地址完全一致，中英文各输入一遍，注意输入手机号时，区号填<code>86</code>。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_credit_card_address.png" alt="credit card address" /></p></li>
<li><p>选择开发者计划类型。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_select_program.png" alt="select program" /></p></li>
<li><p>Review，检查没问题后，提交。</p></li>
<li>继续同意协议。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_program_license.png" alt="program license" /></li>
</ol>


<h2>提交订单、付款</h2>

<ol>
<li><p>终于到了付款这一步骤了，点击<code>Buy now</code>。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_buy_now.png" alt="buy now" /></p></li>
<li><p>再次要求登录Apple ID。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_login_again.png" alt="login again" /></p></li>
<li><p>输入信用卡信息进行付款。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_credit_card_info.png" alt="credit card info" /></p></li>
<li><p>提交订单。<br/>
<img src="http://blog.lessfun.com/images/2014/12/idp_commit_order.png" alt="commit order" /></p></li>
<li><p>付款完成提示，等待苹果发送激活的邮件吧。</p></li>
</ol>


<p><img src="http://blog.lessfun.com/images/2014/12/idp_order_tips.png" alt="order tips" /></p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/12/03/ios-developer-program-tutorial-2014/'>http://blog.lessfun.com/blog/2014/12/03/ios-developer-program-tutorial-2014/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[到底什么时候才需要在ObjC的Block中使用weakSelf/strongSelf]]></title>
    <link href="http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block/"/>
    <updated>2014-11-22T15:59:18+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block</id>
    <content type="html"><![CDATA[<p>Objective C 的 <code>Block</code> 是一个很实用的语法，特别是与GCD结合使用，可以很方便地实现并发、异步任务。但是，如果使用不当，Block 也会引起一些循环引用问题(<code>retain cycle</code>)—— Block 会 retain ‘self’，而 ‘self‘ 又 retain 了 Block。因为在 ObjC 中，直接调用一个实例变量，会被编译器处理成 &lsquo;self->theVar&#8217;，&#8217;self&rsquo; 是一个 strong 类型的变量，引用计数会加 1，于是，self retains queue， queue retains block，block retains self。</p>

<!--more-->


<h3>解决 retain circle</h3>

<p>Apple 官方的建议是，传进 Block 之前，把 &lsquo;self&rsquo; 转换成 weak automatic 的变量，这样在 Block 中就不会出现对 self 的强引用。如果在 Block 执行完成之前，self 被释放了，weakSelf 也会变为 nil。</p>

<p>示例代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">__weak</span> <span class="n">__typeof__</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">weakSelf</span> <span class="n">doSomething</span><span class="p">];</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>clang 的文档表示，在 doSomething 内，weakSelf 不会被释放。但，下面的情况除外：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">__weak</span> <span class="n">__typeof__</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">weakSelf</span> <span class="n">doSomething</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">weakSelf</span> <span class="n">doOtherThing</span><span class="p">];</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 doSomething 中，weakSelf 不会变成 nil，不过在 doSomething 执行完成，调用第二个方法 doOtherThing 的时候，weakSelf 有可能被释放，于是，strongSelf 就派上用场了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">__weak</span> <span class="n">__typeof__</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">__strong</span> <span class="n">__typeof</span><span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="n">strongSelf</span> <span class="o">=</span> <span class="n">weakSelf</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">strongSelf</span> <span class="n">doSomething</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">strongSelf</span> <span class="n">doOtherThing</span><span class="p">];</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>__strong</code> 确保在 Block 内，strongSelf 不会被释放。</p>

<h3>总结</h3>

<ul>
<li>在 Block 内如果需要访问 self 的方法、变量，建议使用 weakSelf。</li>
<li>如果在 Block 内需要多次 访问 self，则需要使用 strongSelf。</li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://dhoerl.wordpress.com/2013/04/23/i-finally-figured-out-weakself-and-strongself/">I finally figured out weakSelf and strongSelf</a></li>
<li><a href="http://stackoverflow.com/questions/21113963/is-the-weakself-strongself-dance-really-necessary-when-referencing-self-inside-a?rq=1">Is the weakSelf/strongSelf dance really necessary when referencing self inside a non-retained completion called from a UIViewController?</a></li>
</ul>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block/'>http://blog.lessfun.com/blog/2014/11/22/when-should-use-weakself-and-strongself-in-objc-block/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 6.1 iPhone Simulator 8.1 Keyboard Issue：键盘无法显示，设置inputAccessoryView崩溃]]></title>
    <link href="http://blog.lessfun.com/blog/2014/10/24/xcode-6-dot-1-iphone-simulator-8-dot-1-keyboard-issue/"/>
    <updated>2014-10-24T14:42:51+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/10/24/xcode-6-dot-1-iphone-simulator-8-dot-1-keyboard-issue</id>
    <content type="html"><![CDATA[<p>随着iPhone 6 &amp; Plus的发布，苹果也陆续更新了XCode和开发模拟器，目前最新的Xcode版本是6.1，内置的Simulator的iOS版本是8.1。也许你兴致冲冲迫不及待地一下子升级到了最新版的开发环境，那么可能会遇到一些键盘上的问题：无法弹出键盘，或者弹出键盘后会莫名其妙地崩溃。</p>

<p>当然，不能怪你，你的项目在iOS7.1上是运行地好好的。只能怪苹果没有推出一个完美无Bug的开发工具。</p>

<!--more-->


<h2>1. 在XCode 6，iOS 8.1模拟器无法弹出键盘</h2>

<p>解决方法很简单，在Simulator的系统菜单中，取消勾选：</p>

<p><code>Hardware</code> &ndash;> <code>Keyboard</code> &ndash;> <code>Connect Hardware Keyboard</code>。</p>

<p>取消选中之后，键盘可以正常弹出，但是，无法使用硬件的键盘输入了，自己慢慢用鼠标点击模拟器里的键盘吧……</p>

<h2>2. 弹出键盘后会莫名其妙地崩溃</h2>

<p>也许你键盘能正常显示了，但是一显示就崩溃，在堆栈中有这样的字样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="o">***</span> <span class="n">First</span> <span class="n">throw</span> <span class="n">call</span> <span class="nl">stack:</span>
</span><span class='line'>  <span class="p">(</span>
</span><span class='line'>      <span class="mi">0</span>   <span class="n">CoreFoundation</span>                      <span class="mh">0x02101df6</span> <span class="n">__exceptionPreprocess</span> <span class="o">+</span> <span class="mi">182</span>
</span><span class='line'>      <span class="mi">1</span>   <span class="n">libobjc</span><span class="p">.</span><span class="n">A</span><span class="p">.</span><span class="n">dylib</span>                     <span class="mh">0x01d8ba97</span> <span class="n">objc_exception_throw</span> <span class="o">+</span> <span class="mi">44</span>
</span><span class='line'>      <span class="mi">2</span>   <span class="n">CoreFoundation</span>                      <span class="mh">0x02101d1d</span> <span class="o">+</span><span class="p">[</span><span class="n">NSException</span> <span class="nl">raise:format:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">141</span>
</span><span class='line'>      <span class="mi">3</span>   <span class="n">UIKit</span>                               <span class="mh">0x008cff9c</span> <span class="o">-</span><span class="p">[</span><span class="n">UIViewController</span> <span class="nl">_addChildViewController:performHierarchyCheck:notifyWillMove:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">210</span>
</span><span class='line'>      <span class="mi">4</span>   <span class="n">UIKit</span>                               <span class="mh">0x00f4b44d</span> <span class="o">-</span><span class="p">[</span><span class="n">UIInputWindowController</span> <span class="nl">changeToInputViewSet:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">576</span>
</span><span class='line'>      <span class="mi">5</span>   <span class="n">UIKit</span>                               <span class="mh">0x00f4c1be</span> <span class="n">__43</span><span class="o">-</span><span class="p">[</span><span class="n">UIInputWindowController</span> <span class="nl">setInputViewSet:</span><span class="p">]</span><span class="n">_block_invoke</span> <span class="o">+</span> <span class="mi">103</span>
</span><span class='line'>      <span class="mi">6</span>   <span class="n">UIKit</span>                               <span class="mh">0x007f73bf</span> <span class="o">+</span><span class="p">[</span><span class="n">UIView</span><span class="p">(</span><span class="n">Animation</span><span class="p">)</span> <span class="nl">performWithoutAnimation:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">82</span>
</span><span class='line'>      <span class="mi">7</span>   <span class="n">UIKit</span>                               <span class="mh">0x00f4bf9c</span> <span class="o">-</span><span class="p">[</span><span class="n">UIInputWindowController</span> <span class="nl">setInputViewSet:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">374</span>
</span><span class='line'>      <span class="mi">8</span>   <span class="n">UIKit</span>                               <span class="mh">0x00ce9101</span> <span class="n">__64</span><span class="o">-</span><span class="p">[</span><span class="n">UIPeripheralHost</span><span class="p">(</span><span class="n">UIKitInternal</span><span class="p">)</span> <span class="nl">setInputViews:animationStyle:</span><span class="p">]</span><span class="n">_block_invoke1459</span> <span class="o">+</span> <span class="mi">43</span>
</span><span class='line'>      <span class="mi">9</span>   <span class="n">UIKit</span>                               <span class="mh">0x00f473af</span> <span class="o">-</span><span class="p">[</span><span class="n">UIInputWindowController</span> <span class="nl">performOperations:withAnimationStyle:</span><span class="p">]</span> <span class="o">+</span> <span class="mi">56</span>
</span><span class='line'>  
</span><span class='line'>  <span class="p">......</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上崩溃也只在XCode 6，iOS 8出现，在iOS 7一切正常。</p>

<p>原因可能是你设置了<code>UITextField</code>或<code>UITextView</code>的<code>inputView</code>或<code>inputAccessoryView</code>为customView，比如这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="c1">//在Xib或Storyboard中创建了一个自定义View</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIView</span> <span class="o">*</span><span class="n">switchKeyboardBar</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">inputAccessoryView</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">switchKeyboardBar</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上述代码在iOS 8中是必定Crash的，因为<code>UITextView.inputAccessoryView</code>不能是其他View的子View。而上面的<code>switchKeyboardBar</code>先被添加到了当前<code>UIViewController</code>的<code>View</code>中，再被设置到<code>inputAccessoryView</code>，就会导致崩溃。</p>

<h3>2.1 解决方法</h3>

<p>不从Xib创建自定义View，而是在代码中手动创建，并且不添加到别的View中。</p>

<p>如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="c1">//注意这里没有 IBOutlet</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UIView</span> <span class="o">*</span><span class="n">switchKeyboardBar</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="n">UIView</span> <span class="o">*</span><span class="p">)</span><span class="n">switchKeyboardBar</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_switchKeyboardBar</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">_switchKeyboardBar</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">CGRectGetWidth</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">),</span> <span class="mi">40</span><span class="p">)];</span>
</span><span class='line'>  
</span><span class='line'>          <span class="c1">//add other subviews</span>
</span><span class='line'>          <span class="p">...</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">_switchKeyboardBar</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">inputAccessoryView</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">switchKeyboardBar</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/10/24/xcode-6-dot-1-iphone-simulator-8-dot-1-keyboard-issue/'>http://blog.lessfun.com/blog/2014/10/24/xcode-6-dot-1-iphone-simulator-8-dot-1-keyboard-issue/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS AutoLayout与AutoSizing：自动布局，想说爱你真的好难]]></title>
    <link href="http://blog.lessfun.com/blog/2014/10/17/ios-autolayout-vs-autosizing/"/>
    <updated>2014-10-17T14:31:20+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/10/17/ios-autolayout-vs-autosizing</id>
    <content type="html"><![CDATA[<p>在iPhone Retina发布之前，还没有AutoLayout，因为屏幕只有一种尺寸。<br/>
当iPhone Retina发布之后，我没有用上AutoLayout，因为屏幕尺寸是用点来表示，布局写起来没什么不同。<br/>
当iPhone 5发布之后，屏幕尺寸终于加长了，但是由于有AutoSizing，所以我还是可以不用AutoLayout。<br/>
现在，iPhone 6和6 Plus发布了，屏幕又大了，我不得不开始考虑是否要使用AutoLayout。</p>

<!--more-->


<h2>1. Autolayout 与 Autosizing的区别</h2>

<p>虽然自iOS6之后，苹果推荐我们使用Autolayout布局，并且在Xib和Storyboard中默认帮我们打开了这个选项，但是在开发过程中，我们偏向于使用<code>Autosizing</code>，并且手动取消掉<code>Autolayout</code>，原因在于，Autolayout太繁琐复杂，而Autosizing简单并且能满足大部分的需求。</p>

<h3>Autosizing适用的情况</h3>

<p>当父视图被拉伸的时候，子视图能够适配父视图的新大小。其原理是，子视图有一个masks，用于指定与父视图上下左右边缘的距离，以及自身宽高的关系。</p>

<p>比如，指定子视图的右边缘紧跟着父视图的右边缘，那么父视图变大之后，子视图还是贴在父视图的右边。</p>

<p>这在大部分简单布局情况下非常有效。</p>

<h3>Autosizing的不足</h3>

<p>使用Autosizing，有一个前提，就是子视图的Frame是固定的，至少宽高是固定的，或者跟随着父视图的Frame变化。但是，如果希望多个子视图与父视图的边距固定，大小自动调整，Autosizing就爱莫能助了。</p>

<p>原因在于：<strong>Autosizing无法智能计算多个子View各自的Frame</strong>。</p>

<p>比如，我们希望在竖屏下布局是这样：</p>

<p><img src="http://cdn4.raywenderlich.com/wp-content/uploads/2013/09/StrutsProblem-portrait-design-423x500.png" alt="autosizing portrait" /></p>

<p>并且在横屏下布局是这样：</p>

<p><img src="http://cdn4.raywenderlich.com/wp-content/uploads/2013/09/StrutsProblem-landscape-looks-good-480x289.png" alt="autosizing landscape" /></p>

<p>除了手写代码调整Frame，单独用Autosizing是无法做到的。这时候就需要借助强大的Autolayout了。</p>

<h3>Autolayout的优点</h3>

<p>Autolayout使用约束来决定每个View的坐标、大小，约束可以针对SuperView，也可以针对其他任意一个SubView。</p>

<p>使用自动布局，你可以表达出视图与视图之间的关系，而不是明确地指定每个视图的Frame。通过约束，视图会自动计算它们应该呆在哪个位置，只要约束足够多，它们也能自动计算自己的大小。</p>

<p>只要指定了约束，无论屏幕大小怎么变化，它们都能自适应，这就是Autolayout的优点：妈妈再也不用担心你手写布局代码啦！也不用担心你为了适配各种屏幕大小而加班了。</p>

<h3>Autolayout的缺点</h3>

<p>Autolayout唯一的缺点就在于：过于复杂，较难上手。</p>

<h3>使用Autolayout，还是Autosizing？</h3>

<p>取决于项目需求。如果Autosizing完全能满足开发需求，那么就没必要使用复杂的Autolayout。但是，如果你已经被适配各种屏幕大小折腾得不成人形了，那么就要早日投入到Autolayout的怀抱了。</p>

<h2>Autolayout的使用</h2>

<p>首先要改变自己对布局的思考方式。你应该忘掉Frame，需要考虑的是subView A与subView B的上下左右的关系，以及与superView的关系。</p>

<h3>借助XCode</h3>

<p>在Xcode5之后，苹果已经尽力让开发者能更方便地使用Autolayout了。<br/>
通过<code>Xcode</code>&ndash;><code>Editor</code>&ndash;><code>Pin/Align</code>菜单为视图添加约束即可。</p>

<p>在XCode中除了通过菜单，还可以通过可视化的方式添加约束：</p>

<p><img src="http://cdn4.raywenderlich.com/wp-content/uploads/2013/09/Pin-green-view.png" alt="autolayout add constraint" /></p>

<p>如果你添加的约束不足以表达某个View的位置大小，XCode还会以黄色的辅助线发出警告，十分好用。</p>

<h3>手写约束Constraint</h3>

<p>XCode虽然强大，但是有时候我们也许希望借助代码来写Constraint。</p>

<p>加入你希望一个子view跟随父view的大小，但是与边距有10个点的距离：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">superview</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">view1</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">view1</span><span class="p">.</span><span class="n">translatesAutoresizingMaskIntoConstraints</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="n">view1</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">superview</span> <span class="nl">addSubview:</span><span class="n">view1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">UIEdgeInsets</span> <span class="n">padding</span> <span class="o">=</span> <span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">superview</span> <span class="nl">addConstraints:</span><span class="err">@</span><span class="p">[</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//view1 constraints</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSLayoutConstraint</span> <span class="nl">constraintWithItem:</span><span class="n">view1</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeTop</span>
</span><span class='line'>                                 <span class="nl">relatedBy:</span><span class="n">NSLayoutRelationEqual</span>
</span><span class='line'>                                    <span class="nl">toItem:</span><span class="n">superview</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeTop</span>
</span><span class='line'>                                <span class="nl">multiplier:</span><span class="mf">1.0</span>
</span><span class='line'>                                  <span class="nl">constant:</span><span class="n">padding</span><span class="p">.</span><span class="n">top</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">NSLayoutConstraint</span> <span class="nl">constraintWithItem:</span><span class="n">view1</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeLeft</span>
</span><span class='line'>                                 <span class="nl">relatedBy:</span><span class="n">NSLayoutRelationEqual</span>
</span><span class='line'>                                    <span class="nl">toItem:</span><span class="n">superview</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeLeft</span>
</span><span class='line'>                                <span class="nl">multiplier:</span><span class="mf">1.0</span>
</span><span class='line'>                                  <span class="nl">constant:</span><span class="n">padding</span><span class="p">.</span><span class="n">left</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">NSLayoutConstraint</span> <span class="nl">constraintWithItem:</span><span class="n">view1</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeBottom</span>
</span><span class='line'>                                 <span class="nl">relatedBy:</span><span class="n">NSLayoutRelationEqual</span>
</span><span class='line'>                                    <span class="nl">toItem:</span><span class="n">superview</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeBottom</span>
</span><span class='line'>                                <span class="nl">multiplier:</span><span class="mf">1.0</span>
</span><span class='line'>                                  <span class="nl">constant:</span><span class="o">-</span><span class="n">padding</span><span class="p">.</span><span class="n">bottom</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">NSLayoutConstraint</span> <span class="nl">constraintWithItem:</span><span class="n">view1</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeRight</span>
</span><span class='line'>                                 <span class="nl">relatedBy:</span><span class="n">NSLayoutRelationEqual</span>
</span><span class='line'>                                    <span class="nl">toItem:</span><span class="n">superview</span>
</span><span class='line'>                                 <span class="nl">attribute:</span><span class="n">NSLayoutAttributeRight</span>
</span><span class='line'>                                <span class="nl">multiplier:</span><span class="mi">1</span>
</span><span class='line'>                                  <span class="nl">constant:</span><span class="o">-</span><span class="n">padding</span><span class="p">.</span><span class="n">right</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'> <span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>


<p>每个约束都是这样的长长一串代码，设想一下需要添加6个约束的话……</p>

<p>幸好有了这个开源库：<a href="https://github.com/Masonry/Masonry">Masonry</a>。</p>

<p>使用这个库，代码添加约束就可以简介如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">view1</span> <span class="nl">mas_makeConstraints:</span><span class="o">^</span><span class="p">(</span><span class="n">MASConstraintMaker</span> <span class="o">*</span><span class="n">make</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">make</span><span class="p">.</span><span class="n">edges</span><span class="p">.</span><span class="n">equalTo</span><span class="p">(</span><span class="n">superview</span><span class="p">).</span><span class="n">with</span><span class="p">.</span><span class="n">insets</span><span class="p">(</span><span class="n">padding</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>更新约束</h3>

<p>比如，我们自己实现了一个图文混排的TextView，添加到Xib时我们还不知道其高度，需要在代码中计算，那么就需要在代码里更新约束，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">NSLayoutConstraint</span> <span class="o">*</span><span class="n">richTextHeightConstraint</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">relayout</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">richTextHeightConstraint</span><span class="p">.</span><span class="n">constant</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">richTextView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">needsUpdateConstraints</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>关键还是实践</h2>

<p>多说无益，贵在实践。只要有意识地去使用了一次，自然就会了。</p>

<h3>参考链接</h3>

<ul>
<li><a href="http://www.raywenderlich.com/50317/beginning-auto-layout-tutorial-in-ios-7-part-1">Beginning Auto Layout Tutorial in iOS 7: Part 1</a></li>
<li><a href="http://www.raywenderlich.com/50319/beginning-auto-layout-tutorial-in-ios-7-part-2">Beginning Auto Layout Tutorial in iOS 7: Part 2</a></li>
<li><a href="http://www.cocoachina.com/industry/20131203/7462.html">开始iOS 7中自动布局教程 一</a></li>
<li><a href="http://www.cnblogs.com/zer0Black/p/3977288.html">开始iOS 7中自动布局教程 二</a></li>
<li><a href="http://segmentfault.com/blog/ilikewhite/1190000000646452">从此爱上iOS Autolayout</a></li>
</ul>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/10/17/ios-autolayout-vs-autosizing/'>http://blog.lessfun.com/blog/2014/10/17/ios-autolayout-vs-autosizing/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SmartSVN一直是Local Refreshing状态，却无法Update/Commit/Check Out]]></title>
    <link href="http://blog.lessfun.com/blog/2014/10/17/smartsvn-keep-local-refreshing-issue/"/>
    <updated>2014-10-17T11:00:22+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/10/17/smartsvn-keep-local-refreshing-issue</id>
    <content type="html"><![CDATA[<p><img src="http://www.wandisco.com/sites/all/themes/wandisco/assets/i/prod-detail/screens/smartsvn.png" alt="smart svn" /></p>

<!--more-->


<h3>Mac下最好的SVN客户端</h3>

<p>在Windows下，最好用的SVN客户端是TortoiseSVN，但是没有跨平台版本。在Mac OS X，也有好几个SVN客户端，比如：Versions，CornerStone，SmartSVN，其中，最好用的是SmartSVN。</p>

<p>SmartSVN有两个版本，专业版和基础版。专业版可以免费试用30天，如果不注册，自动切换为基础版。最重要的是，基础版已经涵盖了大部分的功能特性，实乃业界良心。</p>

<h3>SmartSVN 7.5.5的问题</h3>

<p>话说我一直以来在Mac系统都用着SmartSVN 7.5.5版，顺心顺手，直到昨晚，update的时候一直是<code>Local Refreshing</code>状态，数据也是有出没进，如下图：</p>

<p><img src="http://blog.lessfun.com/images/2014/10/lessfun_smart_svn_keep_local_refreshing.jpg" alt="smart svn slow local refresh" /></p>

<p><code>Out</code>的数据一直在增加，如果放任不管，甚至可以达到几百M。于是我意识到出问题了，但是用命令行的svn来操作却一切正常。怀疑是SmartSVN的<code>Log Cache</code>太大，于是删除了<code>Log Cache</code>文件，位置在<code>~/Library/Preferences/SmartSVN</code>下，问题依旧。</p>

<h3>解决Keep Local Refreshing的方法</h3>

<p>无奈，只好使出重装大法。下载、安装了SmartSVN 8.6版本后，直接弹出了下面的提示：</p>

<p><img src="http://blog.lessfun.com/images/2014/10/lessfun_smart_svn_update_tips.jpg" alt="smart svn slow local refresh" /></p>

<p>实在是后知后觉啊，既然你那么Smart，就不能在出问题的时候直接弹提示吗？非得等到人家摸索并安装了最新版后才弹这个。</p>

<p>好消息是，安装8.6版本后，问题解决。</p>

<h3>更新：</h3>

<p>SmartSVN更新不了，问题不在于客户端本身，而是svn server端禁用了SSLv3引起的，为了避免这个问题： <a href="https://poodle.io/">https://poodle.io/</a></p>

<p>至于为什么更新为SmartSVN 8.6之后，问题解决，是因为8.6版本内置的是svn1.8，在SSLv3无法连接的时候，可能自动切换为tlsv模式。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/10/17/smartsvn-keep-local-refreshing-issue/'>http://blog.lessfun.com/blog/2014/10/17/smartsvn-keep-local-refreshing-issue/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS通过宏定义快速调整View的Frame]]></title>
    <link href="http://blog.lessfun.com/blog/2014/10/15/ios-adjust-view-frame-quickly-with-macro/"/>
    <updated>2014-10-15T18:45:03+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/10/15/ios-adjust-view-frame-quickly-with-macro</id>
    <content type="html"><![CDATA[<p>在iOS开发中，经常需要在运行时动态修改View Frame，比如，theView的X坐标右移2个点，Y坐标下移2个点，常用的方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="n">CGRect</span> <span class="n">newFrame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">theView</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'>    <span class="n">newFrame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="n">newFrame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">theView</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">newFrame</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>逻辑很简单，就是代码繁琐了点，设想一下，假如有5个以上的子View需要调整位置与大小……</p>

<!--more-->


<h3>解决方法</h3>

<p>也很简单，就是封装为通用的宏，或者方法(有些人比较反感C语言样式的宏定义)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">CGRectAdjust</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">w1</span><span class="p">,</span> <span class="n">h1</span><span class="p">)</span>    <span class="n">CGRectMake</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">x1</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">y1</span><span class="p">,</span>  <span class="n">r</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">+</span> <span class="n">w1</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">+</span> <span class="n">h1</span><span class="p">)</span>
</span><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">CGRectSetSize</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>    <span class="n">CGRectMake</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>
</span><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">CGRectSetOrigin</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>    <span class="n">CGRectMake</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">ViewAdjustFrame</span><span class="p">(</span><span class="n">view</span><span class="p">,</span> <span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">w1</span><span class="p">,</span> <span class="n">h1</span><span class="p">)</span>   <span class="n">view</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectAdjust</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">w1</span><span class="p">,</span> <span class="n">h1</span><span class="p">)</span>
</span><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">ViewSetSize</span><span class="p">(</span><span class="n">view</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>   <span class="n">view</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectSetSize</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>
</span><span class='line'>    <span class="err">#</span><span class="n">define</span> <span class="n">ViewSetOrigin</span><span class="p">(</span><span class="n">view</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>   <span class="n">view</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectSetOrigin</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，就可以这样调整UIView的Frame了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="c1">//大小不变，位置往右下方移动2个点</span>
</span><span class='line'>    <span class="n">ViewAdjustFrame</span><span class="p">(</span><span class="n">theView</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/10/15/ios-adjust-view-frame-quickly-with-macro/'>http://blog.lessfun.com/blog/2014/10/15/ios-adjust-view-frame-quickly-with-macro/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[App适配iOS8遇到的兼容问题：键盘方向与StatusBar方向不一致，阻止锁屏失效，OpenGL崩溃]]></title>
    <link href="http://blog.lessfun.com/blog/2014/09/24/ios8-issue-keyboard-orientation-and-idletimerdisabled-not-working/"/>
    <updated>2014-09-24T13:59:29+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/09/24/ios8-issue-keyboard-orientation-and-idletimerdisabled-not-working</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://blog.lessfun.com/images/2014/09/lessfun_ios8_adapt.png" title="ios8 adapt" alt="ios8 adapt">
苹果正式发布iOS8系统，到现在安装覆盖率已达48%，而iOS7的安装率是49%。所以，各位开发者又有得忙了，把所有的App都升级并适配到iOS8系统可不是一件轻松的事。</p>

<p>下面罗列一下我在适配iOS8过程中遇到的兼容问题——而同样的代码在iOS6/7是完全没问题的。</p>

<!--more-->


<h2>1. 键盘弹出方向与StatusBar方向不一致</h2>

<p>在App中，第一个ViewController是只支持竖屏方向(Portrait)的，切换到第二个页面，默认也是Portrait，但用户可以点击按钮切换为横屏(Landscape)。</p>

<p>所以，我把App-Info.plist只选中了<code>Portrait</code>一项，并且在<code>Root ViewController</code>重载了以下方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">shouldAutorotate</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">NSUInteger</span><span class="p">)</span><span class="n">supportedInterfaceOrientations</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">UIInterfaceOrientationMaskPortrait</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">UIInterfaceOrientation</span><span class="p">)</span><span class="n">preferredInterfaceOrientationForPresentation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">UIInterfaceOrientationPortrait</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在需要切换到横屏的时候，调用以下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">onFullScreenButtonTouchUpInside</span><span class="o">:</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">adjustViewFrameToFullScreen</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="n">setStatusBarOrientation</span><span class="o">:</span><span class="n">UIInterfaceOrientationLandscapeRight</span> <span class="n">animated</span><span class="o">:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>由于在iOS6、7中，键盘方向是跟随状态栏方向的，所以一切表现正常，横屏下，无论设备方向怎样，键盘都是横着弹出。</p>

<p>但是，在iOS8中，键盘却随着设备方向弹出了。换言之，<strong>即使Interface Orientation为Landscape，但Device Orientation为Portrait，键盘就会以Portrait的方向弹出</strong>。<br/>
如下图：</p>

<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_ios8_adapt_keyboard.png" title="ios8 adapt keyboard" alt="ios8 adapt keyboard"></p>

<h3>1.1 解决方法</h3>

<p>我想要的是键盘不管设备方向，只关注状态栏方向，也就是StatusBarOrientation。由于iOS8新出不久，在网上没找到解决方案。后来我一同事发现手动更改设备方向可以解决这一问题：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">onFullScreenButtonTouchUpInside</span><span class="o">:</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">adjustViewFrameToFullScreen</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="n">setStatusBarOrientation</span><span class="o">:</span><span class="n">UIInterfaceOrientationLandscapeRight</span> <span class="n">animated</span><span class="o">:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//改设备方向</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">IsIOS8</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[[</span><span class="n">UIDevice</span> <span class="n">currentDevice</span><span class="p">]</span> <span class="n">setValue</span><span class="o">:</span><span class="p">[</span><span class="n">NSNumber</span> <span class="n">numberWithInteger</span><span class="o">:</span><span class="n">UIDeviceOrientationLandscapeLeft</span><span class="p">]</span> <span class="n">forKey</span><span class="o">:</span><span class="err">@</span><span class="s">&quot;orientation&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. 禁用屏幕自动锁定失效</h2>

<p>本来，防止屏幕锁定只需一句代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="n">setIdleTimerDisabled</span><span class="o">:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是，在iOS8中，偶尔会失效。测试人员发现了这个问题是在弹出键盘点击发送后必现，而原因不明。因为键盘出现与隐藏，理论上不应该影响这个<code>idleTimerDisabled</code>的属性。暂且认为是iOS8的Bug吧。</p>

<h3>2.1 解决方法</h3>

<p>在键盘收起的时候，重设<code>IdleTimerDisabled</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">onKeyboardDidHide</span><span class="o">:</span><span class="p">(</span><span class="n">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="n">notification</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">IsIOS8</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="n">setIdleTimerDisabled</span><span class="o">:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>3. OpenGL ES渲染时崩溃</h2>

<p>在iOS中使用OpenGL ES渲染，切换到后台时需要停止渲染，否则会引起崩溃。见这里：<a href="https://developer.apple.com/library/ios/qa/qa1766/_index.html">How to fix OpenGL ES application crashes when moving to the background</a></p>

<p>但是在iOS8中，即使不是切换到后台，而是通过<code>NavigationController</code>切换到另一个ViewController再切回来，也会引起崩溃，崩溃点在：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="p">[</span><span class="n">EAGLContext</span> <span class="n">presentRenderbuffer</span><span class="o">:</span><span class="n">GL_RENDERBUFFER</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>猜测可能是，在iOS 8中，如果OpenGL的视图如果切换到不可见的ViewController，也需要停止绘制，否则也会引起在后台渲染OpenGL类似的崩溃。</p>

<h3>3.1 解决方法</h3>

<p>在ViewWillDisapper的时候停止渲染。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewWillDisappear</span><span class="o">:</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">animated</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">super</span> <span class="n">viewWillDisappear</span><span class="o">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">_videoView</span> <span class="o">&amp;&amp;</span> <span class="n">IsIOS8</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="p">[</span><span class="n">_videoView</span> <span class="n">pauseVideo</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewWillAppear</span><span class="o">:</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">animated</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="n">super</span> <span class="n">viewWillAppear</span><span class="o">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">_videoView</span> <span class="o">&amp;&amp;</span> <span class="n">IsIOS8</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="p">[</span><span class="n">_videoView</span> <span class="n">resumeVideo</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>iOS的兼容真是个蛋疼的问题。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/09/24/ios8-issue-keyboard-orientation-and-idletimerdisabled-not-working/'>http://blog.lessfun.com/blog/2014/09/24/ios8-issue-keyboard-orientation-and-idletimerdisabled-not-working/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode无法正确import预编译文件.pch里的头文件]]></title>
    <link href="http://blog.lessfun.com/blog/2014/09/18/xcode-not-load-all-headers-in-prefix-pch/"/>
    <updated>2014-09-18T11:13:56+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/09/18/xcode-not-load-all-headers-in-prefix-pch</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_xcode_reload_pch_1.png" title="lessfun_xcode_reload_pch_1" alt="lessfun_xcode_reload_pch_1"></p>

<!--more-->


<p>如图。我在<code>xx-Prefix.pch</code>预编译文件中添加了<code>#import "YYMacro.h"</code>，其中定义了一些公共常用的宏和常量。这样就不需要在每个源文件中再import一次，节省代码并且可以提高便以速度。</p>

<p>大部分情况下，一切工作正常。但是，偶尔，XCode会出现一些Bug，导致无法完全加载pch里的头文件，而代码里用到的在Macro.h中定义的常量，全部被标识为未定义：</p>

<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_xcode_reload_pch_2.png" title="lessfun_xcode_reload_pch_2" alt="lessfun_xcode_reload_pch_2"></p>

<p>虽然不影响编译运行，但是却让代码可读性变得很差，无法正常自动补全。试过了以下方法：</p>

<ul>
<li>重启XCode</li>
<li>Product &ndash; Clean</li>
<li>Build &ndash; Run</li>
</ul>


<p>无果。<br/>
摸索并搜索之后，找到了<a href="http://stackoverflow.com/questions/11840622/xcode-4-4-does-not-get-all-the-pch-file-headers-imports">解决方法</a>。</p>

<h3>解决方法</h3>

<h4>1. 打开DerivedData目录</h4>

<p>打开<code>Window</code>&ndash;<code>Organizer</code>，点击<code>右箭头</code>：</p>

<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_xcode_reload_pch_3.png" title="lessfun_xcode_reload_pch_3" alt="lessfun_xcode_reload_pch_3"></p>

<h4>2. 定位到Index &ndash; PrecompiledHeaders</h4>

<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_xcode_reload_pch_4.png" title="lessfun_xcode_reload_pch_4" alt="lessfun_xcode_reload_pch_4"></p>

<h4>3. 删掉相关的预编译头文件目录</h4>

<p>由于XCode打开的可能是Workspace，包含了多个工程，而大部分工程的pch工作正常，所以我们不需要删除整个<code>PrecompiledHeaders</code>，只需要删除无法正常工作的工程的相关目录，就是以工程名为前缀的那几个。</p>

<h4>4. 重新编译</h4>

<p>现在，一切又正常了。</p>

<p><img class="center" src="http://blog.lessfun.com/images/2014/09/lessfun_xcode_reload_pch_5.png" title="lessfun_xcode_reload_pch_5" alt="lessfun_xcode_reload_pch_5"></p>

<h3>结论</h3>

<p>与XCode相关的Bug，比如变量无法正确被加载，头文件没有被import，修改了xib文件但是在模拟器中不起作用，等等，都可以通过删除<code>DerivedData</code>的中间文件解决。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/09/18/xcode-not-load-all-headers-in-prefix-pch/'>http://blog.lessfun.com/blog/2014/09/18/xcode-not-load-all-headers-in-prefix-pch/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让Octopress博客侧边栏的多说评论显示文章标题]]></title>
    <link href="http://blog.lessfun.com/blog/2014/09/14/show-article-title-in-duoshuo-comment/"/>
    <updated>2014-09-14T16:02:58+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/09/14/show-article-title-in-duoshuo-comment</id>
    <content type="html"><![CDATA[<p>基于Octopress的博客搭建，在<a href="http://blog.lessfun.com/blog/2013/11/27/create-blog-in-github-page-using-octopress-and-binding-domain/">用Octopress在Github搭建博客，并绑定独立域名</a>里已经介绍过了，并且介绍了在侧边栏集成多说评论的方法。</p>

<p>但是，有一处陷阱，一直坑了我好久，那就是，多说的最近评论里，被评论的文章标题与链接大多数时候是空的，但是偶尔又能正常显示，如图：<br/>
<img src="http://blog.lessfun.com/images/2014/09/recent_comment_title.png" alt="多说最近评论" /></p>

<!--more-->


<p>一直以来，我都以为这是多说的Bug，默默期待着它有朝一日会自动修复。安静地等待了大半年之后……这个Bug依然深深地存在我的博客里。虽然用户评论不多，但是偶尔难得有一条新评论，但是我却不知道评论的是哪一篇文章，得从头到尾慢慢遍历所有文章才能找出来，这种感觉实在是太不好受了！！！</p>

<p>我忍不住了，那么明显的Bug，多说不可能会那么久都不修复，一定是我的配置出了问题！于是，我检查了三遍<code>_config.yml</code>的内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>duoshuo_asides_title: 1 <span class="c">#显示评论的文章标题</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置是没问题的啊！！！<br/>
估计靠个人力量是解决不了这个问题的了，于是我用上了万能的谷歌，在<a href="http://yrzhll.com/blog/2012/12/12/comment/">蝶姐的博客</a>中找到了原因与解决方法。</p>

<h3>问题原因</h3>

<p>多说默认没有传递文章标题，需要用户手动传递。</p>

<h3>解决方法</h3>

<p>修改<code>source/_includes/post/duoshuo.html</code>：</p>

<p>将：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;ds-thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;ds-thread&quot;</span> <span class="na">data-title=</span><span class="s">&quot;{ { page.title } }&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>rake genrate</code>重新生成一下，Done。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/09/14/show-article-title-in-duoshuo-comment/'>http://blog.lessfun.com/blog/2014/09/14/show-article-title-in-duoshuo-comment/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Invalid Binary, the Binary Is Missing Architectures[arm64] - iTunes Connect的Bug]]></title>
    <link href="http://blog.lessfun.com/blog/2014/09/11/invalid-binary-the-binary-is-missing-architectures-arm64/"/>
    <updated>2014-09-11T14:51:58+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/09/11/invalid-binary-the-binary-is-missing-architectures-arm64</id>
    <content type="html"><![CDATA[<p>从昨天开始，网上iOS开发者哀鸿一片，因为提交App到AppStore的时候，都遇到了这样一个错误：</p>

<blockquote><p>「Today I cannot submit the binary to App Store, with the error &ldquo;Invalid binary, the binary is missing architectures[arm64]&rdquo;.」</p></blockquote>

<p>国内开发者也遇到了同样的问题：<br/>
<a href="http://bbs.lbsyun.baidu.com/redirect.php?tid=12550&amp;goto=lastpost">现在提交的新应用貌似必须支持arm64了</a></p>

<p><a href="http://www.cocoachina.com/ask/questions/show/119687">上传项目到APPstore，遇到的问题</a></p>

<p>公司内部这两天可能刚好不需要提交App，但是这是迟早的事，而项目中大部分引用的库都不支持arm64，未免开始紧张地修改工程编译选项，推动依赖库支持64位架构，沟通、协调、改错，乱成一团蚂蚁。</p>

<p>结果……苹果告诉我们，不好意思，让你们受惊了，这是我们的一个Bug！</p>

<!--more-->


<p>坑爹呢这是！<br/>
<img src="http://blog.lessfun.com/images/2014/09/keng_die_ne.jpg" alt="ios_tabbar_running" /></p>

<p>苹果开发者论坛里的员工TimT如是说：</p>

<blockquote><p>「Yes, there was a fix recently applied to the server. Everyone should be able to submit 32-bit apps again.」</p></blockquote>

<p><img src="http://blog.lessfun.com/images/2014/09/invalid_arm64.png" alt="ios_tabbar_running" /> <br/>
<a href="https://devforums.apple.com/message/1039265#1039265">32. Re: Invalid binary, the binary is missing architectures[arm64]</a></p>

<p>居然Sorry也没一句！任你乱如蚂蚁，我自泰然自若。</p>

<p>好了，没啥事了，还不能洗洗睡，继续提交32位App去吧~</p>

<p>PS: 查看.a库或.framework文件支持那些架构的方法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>; .a
</span><span class='line'><span class="nv">$cd</span> libs
</span><span class='line'><span class="nv">$lipo</span> -info *.a
</span><span class='line'>Architectures in the fat file: libssl.a are: i386 armv7 armv7s
</span><span class='line'>
</span><span class='line'>; .framework
</span><span class='line'><span class="nv">$cd</span> xxFramework.framework
</span><span class='line'><span class="nv">$lipo</span> -info xxFramework
</span><span class='line'>Architectures in the fat file: xxFramework are: armv7 armv7s i386
</span></code></pre></td></tr></table></div></figure>




<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/09/11/invalid-binary-the-binary-is-missing-architectures-arm64/'>http://blog.lessfun.com/blog/2014/09/11/invalid-binary-the-binary-is-missing-architectures-arm64/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从储蓄罐到实现财务自由]]></title>
    <link href="http://blog.lessfun.com/blog/2014/08/28/to-achieve-financial-freedom/"/>
    <updated>2014-08-28T18:24:14+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/08/28/to-achieve-financial-freedom</id>
    <content type="html"><![CDATA[<p>博多·舍费尔的《小狗钱钱》和《财务自由之路》这两本理财入门书在各大社区、论坛都可以看到很多人推荐，口碑良好，最近抽时间看完，虽然有干货，能给人很大的启发，但是废话太多，读者很浪费时间。</p>

<p>其实两本书的内容，可以稍作总结如下：</p>

<!--more-->


<h3>财务自由之路</h3>

<p>这本书讲的是道理，而不是具体方法。作者也说了，遵循本书的思想，可以在七年内赚到一百万，美元。但是，如果只是纸上谈兵，则你仍然是一无所有。</p>

<h4>1. 得正视金钱，树立正确的金钱观。</h4>

<p>不要认为金钱是万恶之源，有钱可耻，贫穷光荣。我们想生活得更好，想让身边的人生活得更好，想让社会进步到更美好，这些都需要钱，需要我们去创造财富。</p>

<h4>2. 要有目标、有理想，并付诸行动，逐步实现计划。</h4>

<p>比如，七年赚一百万，这就是一个目标，但是不能设了目标就置身度外，月月月光。百万富翁不是一天变成的，每个月都花光，不可能几年后就积累了一百万。也不要认为先花钱才能赚到钱，不会理财，你月入几万，也会月花几万，到头来还是月光，所以需要制定详细的储蓄计划。</p>

<h4>3. 在储蓄的基础上进行投资</h4>

<p>第2点所说的储蓄，不要仅仅是存在银行，那样子跑不过通货膨胀，财富会贬值。更好的投资方法是购买股票，如果没有精力或不够专业，还可以选择股票型资金，这两项是收益率较高的，达到12%不是问题。</p>

<h4>4. 「王者之路」选股原则</h4>

<p>炒股时，股票数量有限制，至少购买5只不同行业的股票，可以分散风险；但是不要超过10只，避免精力不足。没有必要精读每家公司的财务报表，但是需要了解公司的收支情况，以及在社会上的名声。如果不知道应该选择什么股票，可以参照「王者之路」的原则，也就是，在不同的行业里选择最领先的公司。</p>

<h4>5. 买卖股票的原则</h4>

<p>买入时，需要保留50%的现金，避免价格下跌后没有余力补仓。只有在买入之后，价格下跌了30%，并且时间过去半年以后，才进行补仓，补仓时也不要满仓。</p>

<h3>小狗钱钱</h3>

<p>这本书以故事的形式，通过小狗和小女孩的口吻，向大家传递从小学会理财的重要性，除了描述新式不同之外，本书的思想可以在《财务自由之路》找到。</p>

<h4>1. 要自信，有计划，付诸行动。</h4>

<p>自信可以通过每天记录「成功日记」获得，每天睡前简单描述当天的收获。<br/>
计划可以通过存钱罐进行区分，每个存钱罐上表明实现该计划所需要的本钱，存够之后才去实施。<br/>
行动就不用多说了，总得想办法填充钱罐。</p>

<h4>2. 开始储蓄，获得利息。</h4>

<p>更好的方法是，用银行存款代替存钱罐，毕竟在银行有利息收入，而放在罐子里，只会慢慢贬值。<br/>
很多人都有错误的观念，认为想赚钱，必须得学会花钱，不会花钱的人，永远也赚不了大钱。这种观念在知乎上尤为常见，但是，这不适合于普通大众。对于一些土豪、富二代、官二代来说，会花钱，通人脉，自然财源滚滚；但是对于普通白领，你就算每个月把所有工资都拿出去请人吃喝玩乐，交的也是酒肉朋友，并不是说你请土豪吃一顿小肥羊，人家就会给你带来价值几千万的投资项目。<br/>
求人不如求己，我们都知道用钱赚钱才是人生赢家，但是怎样才能用钱赚钱？自然得是有钱。怎样才能有钱？自然得靠自己存钱。</p>

<h4>3. 要有盈余，不要月光。</h4>

<p>每个月月光，只会让你觉得生活越来越绝望。<br/>
对于年轻人，目前是钱少，时间多；以后则是钱多，时间少。而贷款刚好可以让这两者互补，将以后的钱预支到现在，先享受，再还款。<br/>
但是贷款有利息，所以很多人贷款之后又恨不得立刻就把钱还清。这样一来，贷款的意义又在哪里呢？还不如选择还款周期长的，减轻自己的压力。</p>

<h4>4. 用本钱去投资。</h4>

<p>制定明确的存钱计划并严格执行，过一段时间之后，就有了可以用于投资的本钱。银行定存的利息是很低的，跑不赢通货膨胀，所以得投资收益率更高的项目，比如基金，每天能稳定地获得固定收益。</p>

<h4>5. 股票利润最大，也可以投资股票资金。</h4>

<p>在所有投资类型中，股票的收益是最大的。但是难度、风险也最大，如果不想让自己亲自炒股，可以委托专业人士——股票基金经理进行操作，也就是买入股票基金。</p>

<h3>实际操作</h3>

<p>以上就是两本书的中心思想，但很多人都是听过很多赚钱的道理，依然过不好这一生。<br/>
普通人没法一夜暴富，至少能尝试坚持做到以下几点：</p>

<ol>
<li>开源节流。增加赚钱的渠道，减少不必要的支出。比如，找份兼职，业余投资之类，同时不要花太多不必要的钱在吃喝玩乐上。</li>
<li>制定计划。比如，每个月定存10%的工资，坚持30年，用作自己的退休基金；减去必要开支之后，30%的工资用作下蛋的金鹅；30%的工资用于实现短期的机会。</li>
<li>持之以恒。雷打不动地慢慢实现自己的每月计划，三十年后，你且看你。</li>
</ol>


<h4>附两本书的下载链接：</h4>

<p><a href="http://dl.vmall.com/c00vwwc6iw">财务自由之路</a><br/>
<a href="http://xuduoshu.com/view/53d862298650ca24f38720b6">小狗钱钱</a></p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/08/28/to-achieve-financial-freedom/'>http://blog.lessfun.com/blog/2014/08/28/to-achieve-financial-freedom/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Godaddy上使用PHPMailer通过SMTP发送邮件的方法]]></title>
    <link href="http://blog.lessfun.com/blog/2014/07/16/setting-phpmailer-to-send-email-in-godaddy/"/>
    <updated>2014-07-16T13:51:29+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/07/16/setting-phpmailer-to-send-email-in-godaddy</id>
    <content type="html"><![CDATA[<p>对于个人站点的“留言”、“评论”功能，除了把用户的发言保存到MySQL数据库中以外，管理员往往还希望在用户留言的同时发送一封邮件到指定邮箱，方便查看。</p>

<p>这个功能用PHP+MySQL实现很简单，PHP语言有一个mail()方法，只需配置好SMTP服务器、发件人的邮箱密码、收件人的邮箱，就可以自动发送邮件。</p>

<p>但是，mail()方法过于简洁，需要用户作很多其他配置，比如在php.ini里设置stmp服务器地址、端口等信息，同时使用也不太方便，比如没法便捷地使用抄送、添加附件等功能。</p>

<p>于是有了<a href="http://phpmailer.worxware.com">PHPMailer</a>，简化了发送邮件的配置。</p>

<!--more-->


<p>使用PHPMailer发送邮件的代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">require</span> <span class="s1">&#39;PHPMailerAutoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$mail</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PHPMailer</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">isSMTP</span><span class="p">();</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Host</span> <span class="o">=</span> <span class="s1">&#39;smtp1.example.com;smtp2.example.com&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">SMTPAuth</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Username</span> <span class="o">=</span> <span class="s1">&#39;user@example.com&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Password</span> <span class="o">=</span> <span class="s1">&#39;secret&#39;</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">From</span> <span class="o">=</span> <span class="s1">&#39;from@example.com&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">FromName</span> <span class="o">=</span> <span class="s1">&#39;Mailer&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">addAddress</span><span class="p">(</span><span class="s1">&#39;joe@example.net&#39;</span><span class="p">,</span> <span class="s1">&#39;Joe User&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">WordWrap</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">isHTML</span><span class="p">(</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Subject</span> <span class="o">=</span> <span class="s1">&#39;Here is the subject&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Body</span>    <span class="o">=</span> <span class="s1">&#39;This is the HTML message body &lt;b&gt;in bold!&lt;/b&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s1">&#39;Message could not be sent.&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s1">&#39;Mailer Error: &#39;</span> <span class="o">.</span> <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">ErrorInfo</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s1">&#39;Message has been sent&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上代码在本地服务器测试一切正常，但是上传到Godaddy空间后，发送邮件时会提示失败，因为Godaddy限制了用户利用第三方的SMTP服务器发送邮件。</p>

<p>解决方法有两个：</p>

<ol>
<li>使用Godaddy提供的免费邮箱转发</li>
<li>使用Godaddy提供的公共SMTP转发</li>
</ol>


<h3>方法1，使用Godaddy提供的邮箱账号</h3>

<p>购买了Godaddy的空间之后，会给用户提供企业Email，后缀名是自己的域名，免费账号可以有100个。我们需要在上面创建一个Email账号。比如：user@test.com, helloworld。见<a href="http://support.godaddy.com/help/article/3552/managing-your-email-account-smtp-relays">这里</a>。</p>

<p>完成后，查看相应账号的<code>Tools - Server Settings</code>，会列出该邮箱使用的smtp host和端口，host一般都是<code>smtpout.secureserver.net</code>，端口则有：<code>25, 80, 3535</code>。可以参考<a href="">Godaddy的帮助</a>。</p>

<p>有了上述信息之后，调整PHPMailer配置如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Host</span> <span class="o">=</span> <span class="s1">&#39;smtpout.secureserver.net&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Port</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">SMTPAuth</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Username</span> <span class="o">=</span> <span class="s1">&#39;user@test&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Password</span> <span class="o">=</span> <span class="s1">&#39;helloworld&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这时候再发送，就不会提示<code>SMTP -&gt; ERROR: Failed to connect to server: Connection refused (111)</code>之类的错误了。</p>

<h3>方法2，使用Godaddy提供的公共SMTP服务器</h3>

<p><a href="http://www.freehao123.com/godaddy-smtp/">这里</a>提到了另一种免邮箱账号密码发送邮件的方法，就是利用Godaddy提供的公共SMTP服务器。</p>

<p>代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Host</span> <span class="o">=</span> <span class="s1">&#39;relay-hosting.secureserver.net&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Port</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">SMTPAuth</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Username</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>   <span class="c1">//blank</span>
</span><span class='line'>  <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">Password</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>   <span class="c1">//blank</span>
</span></code></pre></td></tr></table></div></figure>


<p>(完)</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/07/16/setting-phpmailer-to-send-email-in-godaddy/'>http://blog.lessfun.com/blog/2014/07/16/setting-phpmailer-to-send-email-in-godaddy/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Mac系统上简便地启用Http Server]]></title>
    <link href="http://blog.lessfun.com/blog/2014/06/30/setup-a-simple-http-server-on-mac/"/>
    <updated>2014-06-30T15:27:28+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/06/30/setup-a-simple-http-server-on-mac</id>
    <content type="html"><![CDATA[<p>在本地调试Html等简单网页的时候，经常需要启动一个Web服务器，但又不想或不方便安装Apache或者IIS之类的软件，那么可以使用简单的方法：在Python或Php命令行下启用Http Server。</p>

<p>由于在Mac系统下，Python和Php都是默认安装好的，所以不需要额外的软件支持。具体方法如下：</p>

<!--more-->


<h4>方法一：不支持Php</h4>

<p>这一方法的前提是，Mac系统默认安装了Python，所以可以利用Python启用Http服务器。
步骤：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$cd</span> /path/project/site
</span><span class='line'><span class="nv">$python</span> -m SimpleHTTPServer 8080
</span></code></pre></td></tr></table></div></figure>


<p>`</p>

<p>然后，在浏览器打开<a href="http://localhost:8080/index.html%E5%8D%B3%E5%8F%AF%E3%80%82">http://localhost:8080/index.html%E5%8D%B3%E5%8F%AF%E3%80%82</a></p>

<h4>方法二：支持Php</h4>

<p>注意，以上方法，仅适用于提供html等文件服务，不支持运行php脚本。</p>

<p>如果需要运行php，参考 StackOverFlow 和 官网。请先确保php版本是5.4之后。
步骤：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$cd</span> /path/project/site
</span><span class='line'><span class="nv">$php</span> -S localhost:8080
</span></code></pre></td></tr></table></div></figure>


<h4>停止Server</h4>

<p>在终端按<code>Ctrl-C</code>即可停止。</p>

<h4>其他系统</h4>

<p>由于Python和PHP都是跨平台的，在其他系统上，只需要安装好这两个运行环境，就可以使用同样的方法。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/06/30/setup-a-simple-http-server-on-mac/'>http://blog.lessfun.com/blog/2014/06/30/setup-a-simple-http-server-on-mac/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在一台电脑上使用两个Github账号]]></title>
    <link href="http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/"/>
    <updated>2014-06-11T01:30:09+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client</id>
    <content type="html"><![CDATA[<p>有时候我们需要在一台电脑上push到两个github的repo，但是默认情况Github只适用一个账号。本文介绍了如何在一台电脑使用两个Github提交更改的方法。</p>

<!--more-->


<p>前提：你已经在使用github的A账号，其ssh-key保存在~/.ssh/id_rsa中。<br/>
现在，需要做的是添加另一个ssh-key，按照以下步骤操作。</p>

<h4>1. 生成新的ssh-key</h4>

<p>保存的时候，输入一个新的文件名，如：id_rsa_second</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="nv">$ssh</span>-keygen -t rsa -C <span class="s2">&quot;your_email@example.com&quot;</span>
</span><span class='line'>    <span class="c"># Creates a new ssh key, using the provided email as a label</span>
</span><span class='line'>    <span class="c"># Generating public/private rsa key pair.</span>
</span><span class='line'>    <span class="c"># Enter file in which to save the key (/Users/you/.ssh/id_rsa_second): [Press enter]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. 添加到ssh-agent（每次重启之后都需要调用这句）</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="nv">$ssh</span>-add ~/.ssh/id_rsa_second
</span></code></pre></td></tr></table></div></figure>


<h4>3. 添加ssh key到github</h4>

<p>见<a href="https://help.github.com/articles/generating-ssh-keys">配置ssh-key</a>。</p>

<h4>4. 配置多个ssh-key</h4>

<p>修改<code>~/.ssh/config</code>文件，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="c">#default github</span>
</span><span class='line'>    Host github.com
</span><span class='line'>      HostName github.com
</span><span class='line'>      IdentityFile ~/.ssh/id_rsa
</span><span class='line'>
</span><span class='line'>    Host github_second
</span><span class='line'>      HostName github.com
</span><span class='line'>      IdentityFile ~/.ssh/id_rsa_second
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h4>5. 使用别名pull/push代码</h4>

<p>如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    git clone git@github_second:username/reponame
</span></code></pre></td></tr></table></div></figure>


<h4>6. 为每个账号对应的项目配置email/name</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    1.取消global
</span><span class='line'>    git config --global --unset user.name
</span><span class='line'>    git config --global --unset user.email
</span><span class='line'>
</span><span class='line'>    2.设置每个项目repo的自己的user.email
</span><span class='line'>    git config  user.email <span class="s2">&quot;xxxx@xx.com&quot;</span>
</span><span class='line'>    git config  user.name <span class="s2">&quot;xxxx&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>这样，以后每次在相应的repo下提交更改，都会自动匹配相应的ssh-key了。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/'>http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将已存在的Octopress博客部署到一台新机器(OSX)]]></title>
    <link href="http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/"/>
    <updated>2014-05-20T18:45:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac</id>
    <content type="html"><![CDATA[<h3>适用情形</h3>

<p>已经通过另一台电脑基于octopress搭建了一个博客，现在换到一台新电脑，或者想在两台电脑同时更新博客。本文针对的是Mac电脑，OSX系统。</p>

<h3>步骤简述</h3>

<p>与新搭建一个octopress博客的过程大同小异，都是需要安装Git、安装Ruby、安装Octopress，只是从git中clone已有数据的地方有所不同。</p>

<!--more-->


<h3>具体方法</h3>

<h4>安装Homebrew，用于安装应用。</h4>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”。
</code></pre>

<p>有可能提示需要安装CLT(Command Line Tools) &ldquo;xcode-select —install&#8221;。</p>

<h4>安装Git，用于Octopress上传。</h4>

<p>如果还没有安装Git，使用命令安装：<code>$ brew install git</code><br/>
安装好之后，<a href="https://help.github.com/articles/generating-ssh-keys">配置ssh-key</a>。</p>

<h4>安装Ruby，以便使用Octopress。</h4>

<p>Mac系统默认会安装ruby，但是它设定了权限，导致用户无法修改ruby的文件内容，所以我们需要单独在用户目录下安装一个ruby。见<a href="http://stackoverflow.com/questions/14607193/installing-gem-or-updating-rubygems-fails-with-permissions-error">installing-gem-or-updating-rubygems-fails-with-permissions-error</a>。</p>

<p>如果使用默认的ruby，在后面的步骤有可能会出现以下错误：</p>

<h5>没有权限：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'>Fetching: bundler-1.6.2.gem <span class="o">(</span>100%<span class="o">)</span>
</span><span class='line'>ERROR:  While executing gem ... <span class="o">(</span>Gem::FilePermissionError<span class="o">)</span>
</span><span class='line'>    You don<span class="err">&#39;</span>t have write permissions <span class="k">for </span>the /Library/Ruby/Gems/2.0.0 directory.
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h5>即使加了sudo，成功执行这一步，后面也会出错：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'>Fetching <span class="nb">source </span>index from http://ruby.taobao.org/
</span><span class='line'>
</span><span class='line'>Errno::EACCES: Permission denied - /Library/Ruby/Gems/2.0.0/build_info/rake-0.9.6.info
</span><span class='line'>An error occurred <span class="k">while </span>installing rake <span class="o">(</span>0.9.6<span class="o">)</span>, and Bundler cannot <span class="k">continue</span>.
</span><span class='line'>Make sure that <span class="sb">`</span>gem install rake -v <span class="s1">&#39;0.9.6&#39;</span><span class="sb">`</span> succeeds before bundling.
</span></code></pre></td></tr></table></div></figure>


<h5>所以，还是老老实实安装一个Ruby吧：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c"># 1. 安装Rvm：</span>
</span><span class='line'>    <span class="nv">$ </span>curl -L https://get.rvm.io | bash -s stable —ruby
</span><span class='line'>    <span class="c"># 2. 安装Ruby：</span>
</span><span class='line'>    <span class="nv">$ </span>rvm install ruby-2.0.0-p353  <span class="o">&amp;&amp;</span> rvm use ruby-2.0.0-p353
</span><span class='line'>    <span class="nv">$ </span>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<h4>安装Octopress</h4>

<p>见：<a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>

<p>在本地目录为已有的博客创建一个目录，如：Blog。命令行下切换到该目录，执行以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="c"># 将source分支迁出到本地Blog/octopress_blog</span>
</span><span class='line'>     <span class="nv">$ </span>git clone -b <span class="nb">source </span>git@github.com:username/username.github.com.git octopress_blog
</span><span class='line'>     <span class="c"># clone _deploy目录</span>
</span><span class='line'>     <span class="nv">$ </span><span class="nb">cd </span>octopress_blog
</span><span class='line'>     <span class="nv">$ </span>git clone git@github.com:username/username.github.com.git _deploy
</span></code></pre></td></tr></table></div></figure>


<p>然后运行rake进行配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span>gem install bundler
</span><span class='line'>     <span class="nv">$ </span>rbenv rehash    <span class="c"># If you use rbenv, rehash to be able to run the bundle command</span>
</span><span class='line'>     <span class="nv">$ </span>bundle install
</span><span class='line'>     <span class="nv">$ </span>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>会要求输入你的repos路径，输入即可。然后就可以在新机器上写博客了。</p>

<h4>在两台机器上同步Octopress内容</h4>

<h5>在一台机器提交新的更改：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span>rake generate
</span><span class='line'>     <span class="nv">$ </span>git add .
</span><span class='line'>     <span class="nv">$ </span>git commit -am <span class="s2">&quot;Some comment here.&quot;</span>
</span><span class='line'>     <span class="nv">$ </span>git push origin <span class="nb">source</span>  <span class="c"># update the remote source branch</span>
</span><span class='line'>     <span class="nv">$ </span>rake deploy             <span class="c"># update the remote master branch</span>
</span></code></pre></td></tr></table></div></figure>


<h5>从另一台机器同步更新：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span><span class="nb">cd </span>octopress_blog
</span><span class='line'>     <span class="nv">$ </span>git pull origin <span class="nb">source</span>  <span class="c"># update the local source branch</span>
</span><span class='line'>     <span class="nv">$ </span><span class="nb">cd</span> ./_deploy
</span><span class='line'>     <span class="nv">$ </span>git pull origin master  <span class="c"># update the local master branch</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/'>http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在C++中使用七牛C-SDK，给QINIU_ACCESS_KEY和QINIU_SECRET_KEY赋值失败的解决方法]]></title>
    <link href="http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/"/>
    <updated>2014-04-01T10:14:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp</id>
    <content type="html"><![CDATA[<p>七牛云存储为广大开发者提供了数据云存储的免费使用空间，对于个人开发来说完全足够了。并且提供了各种语言的SDK，方便开发。</p>

<p>在C++工程中使用C-SDK的时候，遇到了一个问题，下面语句在运行时，提示：<code>0x00401005 处未处理的异常: 0xC0000005: 写入位置 0x0040ab42 时发生访问冲突</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/conf.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/rs.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/io.h&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Class</span><span class="o">::</span><span class="n">_initQiniu</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">QINIU_ACCESS_KEY</span> <span class="o">=</span> <span class="s">&quot;my-akey&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">QINIU_SECRET_KEY</span> <span class="o">=</span> <span class="s">&quot;my-sKey&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上语句是官方文档给出的例子代码，但是我用了各种方法，都无法赋值成功，绝望……</p>

<p>在网上找有没有人遇到类似的问题的时候，看到了这篇问答：<a href="http://segmentfault.com/q/1010000000450707">七牛C-SDK中，QINIU_ACCESS_KEY和QINIU_SECRET_KEY应该怎么赋值？</a>，虽然没有给出解决方案，但是至少可以知道，七牛官方提供的C-SDK由于没有在<code>qiniu.def</code>的导出变量后面加上<code>DATA</code>关键字，导致无法在别的C++工程中直接修改变量值。<br/>
在回答中还看到，原来七牛还有一个<a href="https://github.com/qiniu/cpp-sdk/">Cpp-SDK</a>，尝试下载，发现有28M，没有了继续使用的欲望。</p>

<p>那就继续折腾C-SDK吧。既然官方提供的C-SDK无法直接修改<code>QINIU_ACCESS_KEY</code> 和 <code>QINIU_SECRET_KEY</code>，在不重现编译DLL和Lib的情况下（Windows下编译不方便，还得配置各种cURL和OpenSSL的头文件路径），解决方法如下：<br/>
<strong>不直接给那两个变量赋值，而是自己参考源码写生成uptoken的方法。</strong></p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;cJSON.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;http.h&quot;</span>
</span><span class='line'><span class="c1">//......</span>
</span><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">uptoken</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">bucket</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">expires</span> <span class="o">=</span> <span class="mi">3600</span><span class="p">;</span> <span class="c1">// 1小时;</span>
</span><span class='line'>  <span class="n">time_t</span> <span class="n">deadline</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span><span class="o">*</span> <span class="n">authstr</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span><span class="o">*</span> <span class="n">token</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">cJSON</span><span class="o">*</span> <span class="n">root</span> <span class="o">=</span> <span class="n">cJSON_CreateObject</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">cJSON_AddStringToObject</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">&quot;scope&quot;</span><span class="p">,</span> <span class="n">bucket</span><span class="p">);</span>
</span><span class='line'>  <span class="n">time</span><span class="p">(</span><span class="o">&amp;</span><span class="n">deadline</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deadline</span> <span class="o">+=</span> <span class="n">expires</span><span class="p">;</span>
</span><span class='line'>  <span class="n">cJSON_AddNumberToObject</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">&quot;deadline&quot;</span><span class="p">,</span> <span class="n">deadline</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">authstr</span> <span class="o">=</span> <span class="n">cJSON_PrintUnformatted</span><span class="p">(</span><span class="n">root</span><span class="p">);</span>
</span><span class='line'>  <span class="n">cJSON_Delete</span><span class="p">(</span><span class="n">root</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Qiniu_Auth</span> <span class="n">mac</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mac</span><span class="p">.</span><span class="n">accessKey</span> <span class="o">=</span> <span class="n">KYourQiniuAccessKey</span><span class="p">;</span><span class="c1">//将两个Key赋值到mac</span>
</span><span class='line'>  <span class="n">mac</span><span class="p">.</span><span class="n">secretKey</span> <span class="o">=</span> <span class="n">KYourQiniuSecretKey</span><span class="p">;</span>
</span><span class='line'>  <span class="n">token</span> <span class="o">=</span> <span class="n">Qiniu_Mac_SignToken</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mac</span><span class="p">,</span> <span class="n">authstr</span><span class="p">);</span><span class="c1">//当mac不为空，七牛就不会访问QINIU_ACCESS_KEY和QINIU_SECRET_KEY</span>
</span><span class='line'>  <span class="n">Qiniu_Free</span><span class="p">(</span><span class="n">authstr</span><span class="p">);</span><span class="c1">//这里会出现堆冲突=_=#</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">token</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/'>http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在程序运行时获取被调用的DLL的本地文件路径]]></title>
    <link href="http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/"/>
    <updated>2014-03-18T17:42:46+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime</id>
    <content type="html"><![CDATA[<p>很多时候，DLL都是被别的进程所调用，所以在运行时，下面方法获取到的实际上是EXE所在的文件路径：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">QCoreApplication</span><span class="o">::</span><span class="n">applicationFilePath</span><span class="p">();</span><span class="c1">//Qt</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是我们实际上想要获得的是DLL本身的路径，因为运行的EXE与被调用的DLL不一定在同一个目录，比如，当把abc.dll注入到notepad.exe进程，很明显abc.dll是不在notepad所在的目录的。在dll代码中调用上述语句，返回的实际上是notepad的EXE路径。</p>

<p>那么，我们要获得abc.dll真实路径，有两个方法。</p>

<!--more-->


<h4>方法一：</h4>

<p>在DLL的入口函数附近，声明以下变量，并定义函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">EXTERN_C</span> <span class="n">IMAGE_DOS_HEADER</span> <span class="n">__ImageBase</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">VOID</span> <span class="n">CALLBACK</span> <span class="n">abcAPCProc</span><span class="p">(</span><span class="n">ULONG_PTR</span> <span class="n">dwParam</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">WCHAR</span> <span class="n">path</span><span class="p">[</span><span class="n">MAX_PATH</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>      <span class="o">::</span><span class="n">GetModuleFileName</span><span class="p">((</span><span class="n">HINSTANCE</span><span class="p">)</span><span class="o">&amp;</span><span class="n">__ImageBase</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">MAX_PATH</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//path就是当前dll的文件路径</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，需要在导出函数里调用一下上面的函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="n">DWORD</span> <span class="kr">__declspec</span><span class="p">(</span><span class="n">dllexport</span><span class="p">)</span> <span class="kr">__stdcall</span> <span class="n">showABC</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">HANDLE</span> <span class="n">hThread</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="n">DWORD</span> <span class="n">dwRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="n">hThread</span> <span class="o">=</span> <span class="o">::</span><span class="n">OpenThread</span><span class="p">(</span><span class="n">THREAD_SET_CONTEXT</span><span class="p">,</span>
</span><span class='line'>          <span class="n">FALSE</span><span class="p">,</span> <span class="n">getMainThreadId</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>      <span class="n">DW_ASSERT</span><span class="p">(</span><span class="nb">NULL</span> <span class="o">!=</span> <span class="n">hThread</span><span class="p">);</span>
</span><span class='line'>      <span class="n">dwRes</span> <span class="o">=</span> <span class="o">::</span><span class="n">QueueUserAPC</span><span class="p">(</span><span class="n">abcAPCProc</span><span class="p">,</span>
</span><span class='line'>          <span class="n">hThread</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="o">::</span><span class="n">CloseHandle</span><span class="p">(</span><span class="n">hThread</span><span class="p">);</span>
</span><span class='line'>      <span class="n">hThread</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">dwRes</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>方法二：</h4>

<p>定义以下函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">HMODULE</span> <span class="n">GetCurrentModule</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span> <span class="c1">// NB: XP+ solution!</span>
</span><span class='line'>      <span class="n">HMODULE</span> <span class="n">hModule</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="n">GetModuleHandleEx</span><span class="p">(</span>
</span><span class='line'>          <span class="n">GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS</span><span class="p">,</span>
</span><span class='line'>          <span class="p">(</span><span class="n">LPCTSTR</span><span class="p">)</span><span class="n">GetCurrentModule</span><span class="p">,</span>
</span><span class='line'>          <span class="o">&amp;</span><span class="n">hModule</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>      <span class="k">return</span> <span class="n">hModule</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用上面函数，获取当前局部，然后就可以使用<code>GetModuleFileName</code>方法获取DLL路径：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">WCHAR</span> <span class="n">path</span><span class="p">[</span><span class="n">MAX_PATH</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>  <span class="n">HMODULE</span> <span class="n">hm</span> <span class="o">=</span> <span class="n">GetCurrentModule</span><span class="p">();</span>
</span><span class='line'>  <span class="o">::</span><span class="n">GetModuleFileName</span><span class="p">(</span><span class="n">hm</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">MAX_PATH</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/'>http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在UINavigationController中使用UITabBarController，处理Two-stage Rotation错误]]></title>
    <link href="http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/"/>
    <updated>2014-01-15T12:12:51+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller</id>
    <content type="html"><![CDATA[<p>写iOS应用时，经常需要将UITabBarController嵌入到一个根UINavigationController中，如果处理不好，我们会遇到这样的错误：</p>

<pre><code>Two-stage rotation animation is deprecated. This application should use the smoother single-stage animation.
</code></pre>

<p>网上找了一下，StackOverFlow的<a href="http://stackoverflow.com/a/6637554">这个答案</a>说，不应该将UITabBarControllier嵌入到UINavigationController中作为rootViewController，但是，我们的确想要这样做，所以只好寻找其它办法。不过，至少我们可以确定的是，问题出在rootViewController同时包含UITabBarController和UINavigationController。</p>

<!--more-->


<p>几经尝试，最后发现，在设置为<code>window.rootViewController</code>之前，先指定<code>tabBarController.selectedIndex = 0</code>，问题解决。</p>

<p>可以得出，出现上述错误，是因为XCode不知道你需要push哪个子viewController，在加载navigationController的时候，不知道要载入哪一个controller，于是无脑的将tabBarController的viewControllers都动画载入了。</p>

<p>完整代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="nl">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="n">application</span> <span class="nl">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">launchOptions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIWindow</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="p">[[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">]</span> <span class="n">bounds</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIStoryboard</span> <span class="o">*</span><span class="n">storyBoard</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIStoryboard</span> <span class="nl">storyboardWithName:</span><span class="err">@</span><span class="s">&quot;Main&quot;</span> <span class="nl">bundle:</span><span class="n">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UINavigationController</span> <span class="o">*</span><span class="n">navVC</span> <span class="o">=</span> <span class="p">[</span><span class="n">storyBoard</span> <span class="n">instantiateInitialViewController</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//MainViewController是UITabBarController的子类</span>
</span><span class='line'>    <span class="n">MainViewController</span> <span class="o">*</span><span class="n">rootVC</span> <span class="o">=</span> <span class="p">(</span><span class="n">MainViewController</span> <span class="o">*</span><span class="p">)</span><span class="n">navVC</span><span class="p">.</span><span class="n">visibleViewController</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rootVC</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rootVC</span><span class="p">.</span><span class="n">selectedIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">//需要这样设置</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">navVC</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="n">makeKeyAndVisible</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>StoryBoard：</p>

<p><img src="http://blog.lessfun.com/images/2014/01/ios_tabbar_storyboard.png" alt="ios_tabbar_storyboard" /></p>

<p>运行效果：</p>

<p><img src="http://blog.lessfun.com/images/2014/01/ios_tabbar_running.png" alt="ios_tabbar_running" /></p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/'>http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复iOS中UIScrollView的scrollToTop设置后不生效的问题]]></title>
    <link href="http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/"/>
    <updated>2014-01-13T15:15:04+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working</id>
    <content type="html"><![CDATA[<p>iOS中的<code>UIScrollView</code>有一个属性<code>scrollToTop</code>，设置为<code>YES</code>之后，点击设备的状态栏(StatusBar)即可将滚动试图的内容滚动到最顶端，在滚动列表很长的时候，这个特性十分有用。</p>

<p>今日在使用这一属性的时候，发现部分情况下，一切正常；但是也有时候，点击状态栏，滚动条没反应！检查了代码，确定已经设置<code>scrollToTop = YES</code>，但是总是会有不起作用的情况。</p>

<p>于是到万能的StackOverflow寻求答案，不失所望，找到了类似的问题：<a href="http://stackoverflow.com/questions/8951357/scroll-uitableview-to-top-when-tapping-top-of-the-screen">scroll UITableView to top when tapping top of the screen</a></p>

<p>答案也解释得很清楚了，如下：</p>

<!--more-->


<p>如果同一个UIViewController中包含了多个UIScrollView，那么只能有一个ScrollView被设置为scrollToTop = YES; 另外的都要设置为NO，否则就会被系统忽略。
比较坑爹的是，该属性默认为YES，在<code>UIScrollView.h</code>中可以看到声明如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>  <span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">)</span> <span class="n">BOOL</span>  <span class="n">scrollsToTop</span><span class="p">;</span>  <span class="c1">// default is YES.</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以我们需要显示设置其他的<code>scrollView.scrollToTop = NO</code>。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/'>http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
</feed>
