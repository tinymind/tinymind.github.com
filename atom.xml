<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[浮生猎趣]]></title>
  <link href="http://blog.lessfun.com/atom.xml" rel="self"/>
  <link href="http://blog.lessfun.com/"/>
  <updated>2014-06-15T02:14:54+08:00</updated>
  <id>http://blog.lessfun.com/</id>
  <author>
    <name><![CDATA[lslin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在一台电脑上使用两个Github账号]]></title>
    <link href="http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/"/>
    <updated>2014-06-11T01:30:09+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client</id>
    <content type="html"><![CDATA[<p>有时候我们需要在一台电脑上push到两个github的repo，但是默认情况Github只适用一个账号。本文介绍了如何在一台电脑使用两个Github提交更改的方法。</p>

<!--more-->


<p>前提：你已经在使用github的A账号，其ssh-key保存在~/.ssh/id_rsa中。<br/>
现在，需要做的是添加另一个ssh-key，按照以下步骤操作。</p>

<h4>1. 生成新的ssh-key</h4>

<p>保存的时候，输入一个新的文件名，如：id_rsa_second</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="nv">$ssh</span>-keygen -t rsa -C <span class="s2">&quot;your_email@example.com&quot;</span>
</span><span class='line'>    <span class="c"># Creates a new ssh key, using the provided email as a label</span>
</span><span class='line'>    <span class="c"># Generating public/private rsa key pair.</span>
</span><span class='line'>    <span class="c"># Enter file in which to save the key (/Users/you/.ssh/id_rsa_second): [Press enter]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. 添加到ssh-agent（每次重启之后都需要调用这句）</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="nv">$ssh</span>-add ~/.ssh/id_rsa_second
</span></code></pre></td></tr></table></div></figure>


<h4>3. 添加ssh key到github</h4>

<p>见<a href="https://help.github.com/articles/generating-ssh-keys">配置ssh-key</a>。</p>

<h4>4. 配置多个ssh-key</h4>

<p>修改<code>~/.ssh/config</code>文件，如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    <span class="c">#default github</span>
</span><span class='line'>    Host github.com
</span><span class='line'>      HostName github.com
</span><span class='line'>      IdentityFile ~/.ssh/id_rsa
</span><span class='line'>
</span><span class='line'>    Host github_second
</span><span class='line'>      HostName github.com
</span><span class='line'>      IdentityFile ~/.ssh/id_rsa_second
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h4>5. 使用别名pull/push代码</h4>

<p>如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    git clone git@github_second:username/reponame
</span></code></pre></td></tr></table></div></figure>


<h4>6. 为每个账号对应的项目配置email/name</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>    1.取消global
</span><span class='line'>    git config --global --unset user.name
</span><span class='line'>    git config --global --unset user.email
</span><span class='line'>
</span><span class='line'>    2.设置每个项目repo的自己的user.email
</span><span class='line'>    git config  user.email <span class="s2">&quot;xxxx@xx.com&quot;</span>
</span><span class='line'>    git config  user.name <span class="s2">&quot;xxxx&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>这样，以后每次在相应的repo下提交更改，都会自动匹配相应的ssh-key了。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/'>http://blog.lessfun.com/blog/2014/06/11/two-github-account-in-one-client/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将已存在的Octopress博客部署到一台新机器(OSX)]]></title>
    <link href="http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/"/>
    <updated>2014-05-20T18:45:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac</id>
    <content type="html"><![CDATA[<h3>适用情形</h3>

<p>已经通过另一台电脑基于octopress搭建了一个博客，现在换到一台新电脑，或者想在两台电脑同时更新博客。本文针对的是Mac电脑，OSX系统。</p>

<h3>步骤简述</h3>

<p>与新搭建一个octopress博客的过程大同小异，都是需要安装Git、安装Ruby、安装Octopress，只是从git中clone已有数据的地方有所不同。</p>

<!--more-->


<h3>具体方法</h3>

<h4>安装Homebrew，用于安装应用。</h4>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”。
</code></pre>

<p>有可能提示需要安装CLT(Command Line Tools) &ldquo;xcode-select —install&#8221;。</p>

<h4>安装Git，用于Octopress上传。</h4>

<p>如果还没有安装Git，使用命令安装：<code>$ brew install git</code><br/>
安装好之后，<a href="https://help.github.com/articles/generating-ssh-keys">配置ssh-key</a>。</p>

<h4>安装Ruby，以便使用Octopress。</h4>

<p>Mac系统默认会安装ruby，但是它设定了权限，导致用户无法修改ruby的文件内容，所以我们需要单独在用户目录下安装一个ruby。见<a href="http://stackoverflow.com/questions/14607193/installing-gem-or-updating-rubygems-fails-with-permissions-error">installing-gem-or-updating-rubygems-fails-with-permissions-error</a>。</p>

<p>如果使用默认的ruby，在后面的步骤有可能会出现以下错误：</p>

<h5>没有权限：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'>Fetching: bundler-1.6.2.gem <span class="o">(</span>100%<span class="o">)</span>
</span><span class='line'>ERROR:  While executing gem ... <span class="o">(</span>Gem::FilePermissionError<span class="o">)</span>
</span><span class='line'>    You don<span class="err">&#39;</span>t have write permissions <span class="k">for </span>the /Library/Ruby/Gems/2.0.0 directory.
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h5>即使加了sudo，成功执行这一步，后面也会出错：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'>Fetching <span class="nb">source </span>index from http://ruby.taobao.org/
</span><span class='line'>
</span><span class='line'>Errno::EACCES: Permission denied - /Library/Ruby/Gems/2.0.0/build_info/rake-0.9.6.info
</span><span class='line'>An error occurred <span class="k">while </span>installing rake <span class="o">(</span>0.9.6<span class="o">)</span>, and Bundler cannot <span class="k">continue</span>.
</span><span class='line'>Make sure that <span class="sb">`</span>gem install rake -v <span class="s1">&#39;0.9.6&#39;</span><span class="sb">`</span> succeeds before bundling.
</span></code></pre></td></tr></table></div></figure>


<h5>所以，还是老老实实安装一个Ruby吧：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c"># 1. 安装Rvm：</span>
</span><span class='line'>    <span class="nv">$ </span>curl -L https://get.rvm.io | bash -s stable —ruby
</span><span class='line'>    <span class="c"># 2. 安装Ruby：</span>
</span><span class='line'>    <span class="nv">$ </span>rvm install ruby-2.0.0-p353  <span class="o">&amp;&amp;</span> rvm use ruby-2.0.0-p353
</span><span class='line'>    <span class="nv">$ </span>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<h4>安装Octopress</h4>

<p>见：<a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/</a></p>

<p>在本地目录为已有的博客创建一个目录，如：Blog。命令行下切换到该目录，执行以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="c"># 将source分支迁出到本地Blog/octopress_blog</span>
</span><span class='line'>     <span class="nv">$ </span>git clone -b <span class="nb">source </span>git@github.com:username/username.github.com.git octopress_blog
</span><span class='line'>     <span class="c"># clone _deploy目录</span>
</span><span class='line'>     <span class="nv">$ </span><span class="nb">cd </span>octopress_blog
</span><span class='line'>     <span class="nv">$ </span>git clone git@github.com:username/username.github.com.git _deploy
</span></code></pre></td></tr></table></div></figure>


<p>然后运行rake进行配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span>gem install bundler
</span><span class='line'>     <span class="nv">$ </span>rbenv rehash    <span class="c"># If you use rbenv, rehash to be able to run the bundle command</span>
</span><span class='line'>     <span class="nv">$ </span>bundle install
</span><span class='line'>     <span class="nv">$ </span>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>会要求输入你的repos路径，输入即可。然后就可以在新机器上写博客了。</p>

<h4>在两台机器上同步Octopress内容</h4>

<h5>在一台机器提交新的更改：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span>rake generate
</span><span class='line'>     <span class="nv">$ </span>git add .
</span><span class='line'>     <span class="nv">$ </span>git commit -am <span class="s2">&quot;Some comment here.&quot;</span>
</span><span class='line'>     <span class="nv">$ </span>git push origin <span class="nb">source</span>  <span class="c"># update the remote source branch</span>
</span><span class='line'>     <span class="nv">$ </span>rake deploy             <span class="c"># update the remote master branch</span>
</span></code></pre></td></tr></table></div></figure>


<h5>从另一台机器同步更新：</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="nv">$ </span><span class="nb">cd </span>octopress_blog
</span><span class='line'>     <span class="nv">$ </span>git pull origin <span class="nb">source</span>  <span class="c"># update the local source branch</span>
</span><span class='line'>     <span class="nv">$ </span><span class="nb">cd</span> ./_deploy
</span><span class='line'>     <span class="nv">$ </span>git pull origin master  <span class="c"># update the local master branch</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/'>http://blog.lessfun.com/blog/2014/05/20/clone-exists-octopress-blog-to-new-mac/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在C++中使用七牛C-SDK，给QINIU_ACCESS_KEY和QINIU_SECRET_KEY赋值失败的解决方法]]></title>
    <link href="http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/"/>
    <updated>2014-04-01T10:14:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp</id>
    <content type="html"><![CDATA[<p>七牛云存储为广大开发者提供了数据云存储的免费使用空间，对于个人开发来说完全足够了。并且提供了各种语言的SDK，方便开发。</p>

<p>在C++工程中使用C-SDK的时候，遇到了一个问题，下面语句在运行时，提示：<code>0x00401005 处未处理的异常: 0xC0000005: 写入位置 0x0040ab42 时发生访问冲突</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/conf.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/rs.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;qiniu/io.h&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Class</span><span class="o">::</span><span class="n">_initQiniu</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">QINIU_ACCESS_KEY</span> <span class="o">=</span> <span class="s">&quot;my-akey&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">QINIU_SECRET_KEY</span> <span class="o">=</span> <span class="s">&quot;my-sKey&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上语句是官方文档给出的例子代码，但是我用了各种方法，都无法赋值成功，绝望……</p>

<p>在网上找有没有人遇到类似的问题的时候，看到了这篇问答：<a href="http://segmentfault.com/q/1010000000450707">七牛C-SDK中，QINIU_ACCESS_KEY和QINIU_SECRET_KEY应该怎么赋值？</a>，虽然没有给出解决方案，但是至少可以知道，七牛官方提供的C-SDK由于没有在<code>qiniu.def</code>的导出变量后面加上<code>DATA</code>关键字，导致无法在别的C++工程中直接修改变量值。<br/>
在回答中还看到，原来七牛还有一个<a href="https://github.com/qiniu/cpp-sdk/">Cpp-SDK</a>，尝试下载，发现有28M，没有了继续使用的欲望。</p>

<p>那就继续折腾C-SDK吧。既然官方提供的C-SDK无法直接修改<code>QINIU_ACCESS_KEY</code> 和 <code>QINIU_SECRET_KEY</code>，在不重现编译DLL和Lib的情况下（Windows下编译不方便，还得配置各种cURL和OpenSSL的头文件路径），解决方法如下：<br/>
<strong>不直接给那两个变量赋值，而是自己参考源码写生成uptoken的方法。</strong></p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;cJSON.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;http.h&quot;</span>
</span><span class='line'><span class="c1">//......</span>
</span><span class='line'><span class="kt">char</span><span class="o">*</span> <span class="n">uptoken</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">bucket</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">expires</span> <span class="o">=</span> <span class="mi">3600</span><span class="p">;</span> <span class="c1">// 1小时;</span>
</span><span class='line'>  <span class="n">time_t</span> <span class="n">deadline</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span><span class="o">*</span> <span class="n">authstr</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span><span class="o">*</span> <span class="n">token</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">cJSON</span><span class="o">*</span> <span class="n">root</span> <span class="o">=</span> <span class="n">cJSON_CreateObject</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">cJSON_AddStringToObject</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">&quot;scope&quot;</span><span class="p">,</span> <span class="n">bucket</span><span class="p">);</span>
</span><span class='line'>  <span class="n">time</span><span class="p">(</span><span class="o">&amp;</span><span class="n">deadline</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deadline</span> <span class="o">+=</span> <span class="n">expires</span><span class="p">;</span>
</span><span class='line'>  <span class="n">cJSON_AddNumberToObject</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="s">&quot;deadline&quot;</span><span class="p">,</span> <span class="n">deadline</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">authstr</span> <span class="o">=</span> <span class="n">cJSON_PrintUnformatted</span><span class="p">(</span><span class="n">root</span><span class="p">);</span>
</span><span class='line'>  <span class="n">cJSON_Delete</span><span class="p">(</span><span class="n">root</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">Qiniu_Auth</span> <span class="n">mac</span><span class="p">;</span>
</span><span class='line'>  <span class="n">mac</span><span class="p">.</span><span class="n">accessKey</span> <span class="o">=</span> <span class="n">KYourQiniuAccessKey</span><span class="p">;</span><span class="c1">//将两个Key赋值到mac</span>
</span><span class='line'>  <span class="n">mac</span><span class="p">.</span><span class="n">secretKey</span> <span class="o">=</span> <span class="n">KYourQiniuSecretKey</span><span class="p">;</span>
</span><span class='line'>  <span class="n">token</span> <span class="o">=</span> <span class="n">Qiniu_Mac_SignToken</span><span class="p">(</span><span class="o">&amp;</span><span class="n">mac</span><span class="p">,</span> <span class="n">authstr</span><span class="p">);</span><span class="c1">//当mac不为空，七牛就不会访问QINIU_ACCESS_KEY和QINIU_SECRET_KEY</span>
</span><span class='line'>  <span class="n">Qiniu_Free</span><span class="p">(</span><span class="n">authstr</span><span class="p">);</span><span class="c1">//这里会出现堆冲突=_=#</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">token</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/'>http://blog.lessfun.com/blog/2014/04/01/using-qiniu-c-sdk-in-cpp/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在程序运行时获取被调用的DLL的本地文件路径]]></title>
    <link href="http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/"/>
    <updated>2014-03-18T17:42:46+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime</id>
    <content type="html"><![CDATA[<p>很多时候，DLL都是被别的进程所调用，所以在运行时，下面方法获取到的实际上是EXE所在的文件路径：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">QCoreApplication</span><span class="o">::</span><span class="n">applicationFilePath</span><span class="p">();</span><span class="c1">//Qt</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是我们实际上想要获得的是DLL本身的路径，因为运行的EXE与被调用的DLL不一定在同一个目录，比如，当把abc.dll注入到notepad.exe进程，很明显abc.dll是不在notepad所在的目录的。在dll代码中调用上述语句，返回的实际上是notepad的EXE路径。</p>

<p>那么，我们要获得abc.dll真实路径，有两个方法。</p>

<!--more-->


<h4>方法一：</h4>

<p>在DLL的入口函数附近，声明以下变量，并定义函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">EXTERN_C</span> <span class="n">IMAGE_DOS_HEADER</span> <span class="n">__ImageBase</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">VOID</span> <span class="n">CALLBACK</span> <span class="n">abcAPCProc</span><span class="p">(</span><span class="n">ULONG_PTR</span> <span class="n">dwParam</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">WCHAR</span> <span class="n">path</span><span class="p">[</span><span class="n">MAX_PATH</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>      <span class="o">::</span><span class="n">GetModuleFileName</span><span class="p">((</span><span class="n">HINSTANCE</span><span class="p">)</span><span class="o">&amp;</span><span class="n">__ImageBase</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">MAX_PATH</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//path就是当前dll的文件路径</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，需要在导出函数里调用一下上面的函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="n">DWORD</span> <span class="kr">__declspec</span><span class="p">(</span><span class="n">dllexport</span><span class="p">)</span> <span class="kr">__stdcall</span> <span class="n">showABC</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">HANDLE</span> <span class="n">hThread</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="n">DWORD</span> <span class="n">dwRes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="n">hThread</span> <span class="o">=</span> <span class="o">::</span><span class="n">OpenThread</span><span class="p">(</span><span class="n">THREAD_SET_CONTEXT</span><span class="p">,</span>
</span><span class='line'>          <span class="n">FALSE</span><span class="p">,</span> <span class="n">getMainThreadId</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>      <span class="n">DW_ASSERT</span><span class="p">(</span><span class="nb">NULL</span> <span class="o">!=</span> <span class="n">hThread</span><span class="p">);</span>
</span><span class='line'>      <span class="n">dwRes</span> <span class="o">=</span> <span class="o">::</span><span class="n">QueueUserAPC</span><span class="p">(</span><span class="n">abcAPCProc</span><span class="p">,</span>
</span><span class='line'>          <span class="n">hThread</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="o">::</span><span class="n">CloseHandle</span><span class="p">(</span><span class="n">hThread</span><span class="p">);</span>
</span><span class='line'>      <span class="n">hThread</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">dwRes</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>方法二：</h4>

<p>定义以下函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">HMODULE</span> <span class="n">GetCurrentModule</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span> <span class="c1">// NB: XP+ solution!</span>
</span><span class='line'>      <span class="n">HMODULE</span> <span class="n">hModule</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="n">GetModuleHandleEx</span><span class="p">(</span>
</span><span class='line'>          <span class="n">GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS</span><span class="p">,</span>
</span><span class='line'>          <span class="p">(</span><span class="n">LPCTSTR</span><span class="p">)</span><span class="n">GetCurrentModule</span><span class="p">,</span>
</span><span class='line'>          <span class="o">&amp;</span><span class="n">hModule</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>      <span class="k">return</span> <span class="n">hModule</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>调用上面函数，获取当前局部，然后就可以使用<code>GetModuleFileName</code>方法获取DLL路径：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="n">WCHAR</span> <span class="n">path</span><span class="p">[</span><span class="n">MAX_PATH</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>  <span class="n">HMODULE</span> <span class="n">hm</span> <span class="o">=</span> <span class="n">GetCurrentModule</span><span class="p">();</span>
</span><span class='line'>  <span class="o">::</span><span class="n">GetModuleFileName</span><span class="p">(</span><span class="n">hm</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">MAX_PATH</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/'>http://blog.lessfun.com/blog/2014/03/18/get-dll-path-at-runtime/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在UINavigationController中使用UITabBarController，处理Two-stage Rotation错误]]></title>
    <link href="http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/"/>
    <updated>2014-01-15T12:12:51+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller</id>
    <content type="html"><![CDATA[<p>写iOS应用时，经常需要将UITabBarController嵌入到一个根UINavigationController中，如果处理不好，我们会遇到这样的错误：</p>

<pre><code>Two-stage rotation animation is deprecated. This application should use the smoother single-stage animation.
</code></pre>

<p>网上找了一下，StackOverFlow的<a href="http://stackoverflow.com/a/6637554">这个答案</a>说，不应该将UITabBarControllier嵌入到UINavigationController中作为rootViewController，但是，我们的确想要这样做，所以只好寻找其它办法。不过，至少我们可以确定的是，问题出在rootViewController同时包含UITabBarController和UINavigationController。</p>

<!--more-->


<p>几经尝试，最后发现，在设置为<code>window.rootViewController</code>之前，先指定<code>tabBarController.selectedIndex = 0</code>，问题解决。</p>

<p>可以得出，出现上述错误，是因为XCode不知道你需要push哪个子viewController，在加载navigationController的时候，不知道要载入哪一个controller，于是无脑的将tabBarController的viewControllers都动画载入了。</p>

<p>完整代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="nl">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="n">application</span> <span class="nl">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="n">launchOptions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIWindow</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="p">[[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">]</span> <span class="n">bounds</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIStoryboard</span> <span class="o">*</span><span class="n">storyBoard</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIStoryboard</span> <span class="nl">storyboardWithName:</span><span class="err">@</span><span class="s">&quot;Main&quot;</span> <span class="nl">bundle:</span><span class="n">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UINavigationController</span> <span class="o">*</span><span class="n">navVC</span> <span class="o">=</span> <span class="p">[</span><span class="n">storyBoard</span> <span class="n">instantiateInitialViewController</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//MainViewController是UITabBarController的子类</span>
</span><span class='line'>    <span class="n">MainViewController</span> <span class="o">*</span><span class="n">rootVC</span> <span class="o">=</span> <span class="p">(</span><span class="n">MainViewController</span> <span class="o">*</span><span class="p">)</span><span class="n">navVC</span><span class="p">.</span><span class="n">visibleViewController</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rootVC</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="n">rootVC</span><span class="p">.</span><span class="n">selectedIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">//需要这样设置</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">navVC</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="n">makeKeyAndVisible</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>StoryBoard：</p>

<p><img src="http://blog.lessfun.com/images/2014/01/ios_tabbar_storyboard.png" alt="ios_tabbar_storyboard" /></p>

<p>运行效果：</p>

<p><img src="http://blog.lessfun.com/images/2014/01/ios_tabbar_running.png" alt="ios_tabbar_running" /></p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/'>http://blog.lessfun.com/blog/2014/01/15/using-uitabbarcontroller-inside-uinavigationcontroller/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复iOS中UIScrollView的scrollToTop设置后不生效的问题]]></title>
    <link href="http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/"/>
    <updated>2014-01-13T15:15:04+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working</id>
    <content type="html"><![CDATA[<p>iOS中的<code>UIScrollView</code>有一个属性<code>scrollToTop</code>，设置为<code>YES</code>之后，点击设备的状态栏(StatusBar)即可将滚动试图的内容滚动到最顶端，在滚动列表很长的时候，这个特性十分有用。</p>

<p>今日在使用这一属性的时候，发现部分情况下，一切正常；但是也有时候，点击状态栏，滚动条没反应！检查了代码，确定已经设置<code>scrollToTop = YES</code>，但是总是会有不起作用的情况。</p>

<p>于是到万能的StackOverflow寻求答案，不失所望，找到了类似的问题：<a href="http://stackoverflow.com/questions/8951357/scroll-uitableview-to-top-when-tapping-top-of-the-screen">scroll UITableView to top when tapping top of the screen</a></p>

<p>答案也解释得很清楚了，如下：</p>

<!--more-->


<p>如果同一个UIViewController中包含了多个UIScrollView，那么只能有一个ScrollView被设置为scrollToTop = YES; 另外的都要设置为NO，否则就会被系统忽略。
比较坑爹的是，该属性默认为YES，在<code>UIScrollView.h</code>中可以看到声明如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>  <span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">)</span> <span class="n">BOOL</span>  <span class="n">scrollsToTop</span><span class="p">;</span>  <span class="c1">// default is YES.</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以我们需要显示设置其他的<code>scrollView.scrollToTop = NO</code>。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/'>http://blog.lessfun.com/blog/2014/01/13/fix-uiscrollview-scrolltotop-not-working/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通过简单的方法适应iOS7中的UIViewController，同时兼容iOS6]]></title>
    <link href="http://blog.lessfun.com/blog/2014/01/10/simple-way-to-adjust-viewcontroller-to-fit-ios7/"/>
    <updated>2014-01-10T15:07:24+08:00</updated>
    <id>http://blog.lessfun.com/blog/2014/01/10/simple-way-to-adjust-viewcontroller-to-fit-ios7</id>
    <content type="html"><![CDATA[<h3>设置view从导航栏下方开始布局</h3>

<p>在iOS6及以前的版本中，UIViewController的高度和位置都是从导航栏下方开始的。但是在iOS7中，UIViewController不再提供wantsFullScreenLayout属性，UIViewController创建后默认就是Full Screen的，因此如果带导航栏的应用界面中的部分控件会与导航栏重叠在一起。</p>

<p>我们的应用大都要兼容低于iOS7的版本，所以必须解决这种不兼容的现象。
思路是，还是按照iOS6的布局方式，因为被导航栏覆盖部分界面实在看不出有什么好处。所以，我们需要判断iOS版本，如果是iOS6，一切照旧，如果是iOS7，则设置view从导航栏下方开始布局。</p>

<p>简单的方法，在ViewDidLoad里面增加几句代码即可，如下：</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'> <span class="err">#</span><span class="n">define</span> <span class="n">SystemVersionLessThan</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="p">([[[</span><span class="n">UIDevice</span> <span class="n">currentDevice</span><span class="p">]</span> <span class="n">systemVersion</span><span class="p">]</span> <span class="nl">compare:</span><span class="n">v</span> <span class="nl">options:</span><span class="n">NSNumericSearch</span><span class="p">]</span> <span class="o">==</span> <span class="n">NSOrderedAscending</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">SystemVersionLessThan</span><span class="p">(</span><span class="err">@</span><span class="s">&quot;7.0&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">edgesForExtendedLayout</span> <span class="o">=</span> <span class="n">UIRectEdgeNone</span><span class="p">;</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">extendedLayoutIncludesOpaqueBars</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样设置之后，可以看到在iOS7中布局跟iOS显示一样了。</p>

<p>如果有很多个UIViewController，只需要新建一个UIViewController的子类，比如<code>MyUIViewController</code>，把上面代码放到MyUIViewController的<code>ViewDidLoad</code>中，然后修改所有的UIViewController为MyUIViewController即可。</p>

<h3>修改iOS7中UITableViewCell的分隔线</h3>

<p>只是还有一个问题，如果添加了UITableView，会发现cell的分隔线短了一小部分，还需设置如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">separatorInset</span> <span class="o">=</span> <span class="n">UIEdgeInsetsZero</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改后的效果如图：
iOS6：<br/>
<img src="http://blog.lessfun.com/images/2014/01/ios_adjust_ios6.png" alt="ios_adjust_ios6" /></p>

<p>iOS7:<br/>
<img src="http://blog.lessfun.com/images/2014/01/ios_adjust_ios7.png" alt="ios_adjust_ios6" /></p>

<p>iOS7表格分隔线：<br/>
<img src="http://blog.lessfun.com/images/2014/01/ios_adjust_ios7_tableviewcell.png" alt="ios_adjust_ios6" /></p>

<p>搞定！</p>

<h3>去掉iOS6中导航栏的阴影</h3>

<p>iOS6的UINavigationBar默认加了一层阴影，而iOS7中则默认没有，我们可以通过下面的代码去掉iOS6的导航栏阴影：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">SystemVersionLessThan</span><span class="p">(</span><span class="err">@</span><span class="s">&quot;6.0&quot;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setShadowImage:</span><span class="p">[[</span><span class="n">UIImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]];</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2014/01/10/simple-way-to-adjust-viewcontroller-to-fit-ios7/'>http://blog.lessfun.com/blog/2014/01/10/simple-way-to-adjust-viewcontroller-to-fit-ios7/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[比特币交易的一点感想]]></title>
    <link href="http://blog.lessfun.com/blog/2013/12/13/some-feeling-about-bitcoin-trading/"/>
    <updated>2013-12-13T10:14:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2013/12/13/some-feeling-about-bitcoin-trading</id>
    <content type="html"><![CDATA[<p>我接触比特币比较晚，13年10月末才知道有比特币这个东西存在，当时是逛知乎，发现了这个问题：<a href="http://www.zhihu.com/question/19982269/answer/13554085">大三的学生，手头有6000元的钱，想要做些小投资赚点儿钱，有什么好建议么？</a></p>

<p>该问题的答案如下：</p>

<p><img src="http://blog.lessfun.com/images/2013/12/bitcoin_trading_answer.png" alt="关于小投资的回答" /></p>

<!--more-->


<p>事实上，我在知乎上遇见了几次这条答案，但没放在心上，因为我不知道比特币是什么东西。后来，我看到这条回答的评论有很多，于是点开了评论，看到“收益率简直太疯狂了”，开始觉得这是个靠谱的可以让人致富的回答，于是，开始搜索比特币的资料。</p>

<p>然后就大概了解了比特币是什么东西，当然，对于其复杂的算法是不懂的，只知道，比特币是去中心化的总数量固定的可以无限分割的虚拟货币，本身无价值，靠众多持有者用现实货币交易而定价。</p>

<p>由于本身无价值，导致它利润极高，如果在刚提出来的时候就开始了挖矿，成本几乎为零，等到交易价为现在的500+美元的时候卖出，收益翻了N倍。也由于本身无价值，靠交易者自由交易而定价，导致它风险极高，如果不是免费获得，而是通过现实货币买入，则很可能买入之后价格一路下降，血本无归……</p>

<p>风险与收益并存而且都那么高，所以，刚开始我是不准备买入的，因为那时候单个比特币的价格已经是200+美元了。不过我也相信这是一个会增值的虚拟货币，所以我开始寻找免费获得比特币的方法。然后就找到了一些点击广告获得赠送的比特币的方法，刚开始还好，三四天就可以收到0.0003个比特币。后来，单价上涨之后，免费获得的比特币越来越少，我终于绝望了。同时想到如果当初200美元买入了，那么现在就涨了几倍……于是决定直接买入。</p>

<p>我用了3000元人民币，在两个平台分别充值1500，以4600和4700的价格买入。本想着长期持有等待升值的，但是，事实证明情绪没那么容易稳定。买入之后，看到单价上升，就会内心窃喜，同时有卖出再买入的打算；看到单价下降，忍不住彷徨紧张，后悔买入太早。这样一折腾，终于沦为短线操作。短线操作也有问题，如果买入之后，价格继续下跌，就会后悔买入太早；如果卖出之后价格上涨，就会后悔卖出太早。总之，一入比特深似海，从此安宁是路人。</p>

<p>不过，几手交易下来，总值还是有所增长的，只是，心态不稳，收益只有几十块。后来看到莱特币利润更大，就在一个平台卖出比特币，买入莱特币。</p>

<p>现在的情况是，分别在5800买入了比特币、在213.5买入了莱特币。此时（2013.12.15 15:50）比特币价格是5111元人民币，莱特币是175.33元人民币，也就是说，我开始赚到的那几十块亏了，本金也缩水不少，总投3000元，现值2760元。</p>

<p>也许过一段时间，价格还会涨回去。但是，实时关注价格走势，心情跟着一路起伏，严重影响身心健康。我开始怀疑是否值得进行虚拟货币交易。诚然，那么点钱，亏了也不是大问题，只是，赚了也不会发什么财。如论哪里，都是土豪的世界。</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2013/12/13/some-feeling-about-bitcoin-trading/'>http://blog.lessfun.com/blog/2013/12/13/some-feeling-about-bitcoin-trading/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS中检测UIScrollView滚动动画是否结束]]></title>
    <link href="http://blog.lessfun.com/blog/2013/12/06/detect-uiscrollview-did-end-scrolling-animate/"/>
    <updated>2013-12-06T00:34:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2013/12/06/detect-uiscrollview-did-end-scrolling-animate</id>
    <content type="html"><![CDATA[<p>在iOS中使用UITableView的时候，有时候需要检测UITableView的滚动动画是否结束，但是很遗憾，iOS没有直接提供这样的API。
先看一下现有的几个方法是怎样的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">scrollViewDidEndDragging:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="n">scrollView</span> <span class="nl">willDecelerate:</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">decelerate</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个方法表示手指离开了scrollview，第二个参数用于判断滚动速度是否慢慢下降。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">scrollViewDidEndDecelerating:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="n">scrollView</span><span class="p">;</span>      <span class="c1">// called when scroll view grinds to a halt</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个方法看上去挺像我们要找的：停止减速。但是，从注释看，“嘎然而止”的时候才会被调用，很明显，我们要的是“自然停止”时被调的方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">scrollViewDidEndScrollingAnimation:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="n">scrollView</span><span class="p">;</span> <span class="c1">// called when setContentOffset scrollRectVisible:animated: finishes. not called if not animating</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个是指scrollview停止滚动动画，嗯，这下是我们想要的了吧！</p>

<p>抱歉，不是！！！
试验一下就会发现，无论怎么滚动怎么停止，这个方法都不会被调！处分用代码的方式调用了<code>setContentOffset scrollRectVisible:animated: finishes</code>，但是，我们手指触发试图滚动是不会调该方法的……</p>

<p>一堆似是而非的方法绕得头晕啊……</p>

<h3>解决方法</h3>

<!--more-->


<p>我们自己主动去调<code>scrollViewDidEndScrollingAnimation</code>。</p>

<p>原理：在<code>- (void)scrollViewDidScroll:(UIScrollView *)scrollView</code>内，创建一个异步调用，等待0.1秒后调<code>scrollViewDidEndScrollingAnimation</code>。由于<code>scrollViewDidScroll</code>会不断被调用，再次触发时取消上一次的异步请求。等到不再滚动时，最后一次的请求不会被取消，最终会跑到<code>scrollViewDidScroll</code>，然后，添加想要在滚动停止时调用的代码即可。</p>

<p>代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">scrollViewDidScroll:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSObject</span> <span class="nl">cancelPreviousPerformRequestsWithTarget:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">performSelector:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="nl">scrollViewDidEndScrollingAnimation:</span><span class="p">)</span> <span class="nl">withObject:</span><span class="n">nil</span> <span class="nl">afterDelay:</span><span class="mf">0.1</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">scrollViewDidEndScrollingAnimation:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="n">scrollView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSObject</span> <span class="nl">cancelPreviousPerformRequestsWithTarget:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//这里添加你的逻辑，比如，触发上拉加载更多</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2013/12/06/detect-uiscrollview-did-end-scrolling-animate/'>http://blog.lessfun.com/blog/2013/12/06/detect-uiscrollview-did-end-scrolling-animate/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客发布后的基本配置、继续阅读、自动打开、代码高亮、插入图片、分类标签、修改样式]]></title>
    <link href="http://blog.lessfun.com/blog/2013/12/05/config-the-octopress-blog-after-deployed/"/>
    <updated>2013-12-05T02:41:00+08:00</updated>
    <id>http://blog.lessfun.com/blog/2013/12/05/config-the-octopress-blog-after-deployed</id>
    <content type="html"><![CDATA[<h2>基本配置</h2>

<p>修改_config.yml，格式为：<code>配置项: + 空格 + 参数</code>，空格不能少。</p>

<h3>标题、副标题、作者、侧边栏等</h3>

<p>编辑<code>_config.yml</code>，修改<code>url:</code>、<code>title</code>、<code>sub_title</code>、<code>author</code>, <code>default_asides</code>的对应参数。</p>

<h3>修改日期格式</h3>

<p>编辑<code>_config.yml</code>的<code>date_format</code>，格式定义见<a href="http://www.ruby-doc.org/core-1.9.2/Time.html#method-i-strftime">这里</a></p>

<p>如想显示为：<code>2013-12-02, Mon</code>，则改为：</p>

<pre><code>date_format: "%F, %a"
</code></pre>

<h2>继续阅读</h2>

<p>如果正文太长，不希望在首页直接显示完整内容，可以在适当的位置加上一句<code>&lt;!--more--&gt;</code>，后面的内容就会被按钮<code>Read on→</code>所替代，点击继续阅读。</p>

<!--more-->


<h2>运行命令后自动打开文件、预览</h2>

<p>修改<code>Rakefile</code>，运行指定命令后打开文件编辑，或者打开浏览器预览。见<a href="http://imwuyu.me/talk-about/configuring-octopress.html/">博客：基于 Octopress－ 配置篇（Mac，Xcode 4.3.1，Ruby 1.9.3）</a></p>

<h3>new_post后自动打开对应的markdown文件</h3>

<p>在<code>Rakefile</code>中定义：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">editor</span> <span class="o">=</span> <span class="s2">&quot;vi&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在new_post命令后面添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">if</span> <span class="c1">#{editor}</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">editor</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>preview之后自动调用浏览器打开预览页面</h3>

<p>在preview命令后面添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;sleep 2; open http://localhost:</span><span class="si">#{</span><span class="n">server_port</span><span class="si">}</span><span class="s2">/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>代码高亮</h2>

<p>作为一个面向黑客的博客系统，如果不支持代码高亮就说不过去了。Octopress默认使用<a href="http://pygments.org/">pygment</a>这个语法高亮插件。</p>

<p>Mac/Linux应该已经包含了该模块。</p>

<p>如果是Windows，需要安装Python，并且使用easy_install安装pygments模块。</p>

<ol>
<li>安装Python；</li>
<li>安装<a href="https://pypi.python.org/pypi/setuptools">easy_install</a>；</li>
<li>添加%Python%\Scripts到环境变量，%Python%是Python的安装目录；</li>
<li>安装pygements：<code>easy_install pygments</code></li>
</ol>


<p>在Markdown源文件里，插入代码有多种方法，这里只介绍简单的三种。</p>

<p>1.四个空格缩进</p>

<p>对于四个空格开头的语句，Markdown输出到html时会自动用<code>&lt;pre&gt;</code>和<code>&lt;code&gt;</code>标签包起来，当作代码块显示。需要注意的是，代码块前面必须要有一行空行。不过这样是不会有关键字高亮的，只是背景是代码高亮的背景而已。如下：</p>

<pre><code>std::string hi("Hello world!");
</code></pre>

<p>2.前后用三个反引号“&#8220;`”包含</p>

<p>反引号设定代码高亮比较简单灵活，可以指定代码标题、语言、链接等等。格式如下：</p>

<pre><code>``` [language] [title] [url] [link text]
 Hello world
```
</code></pre>

<p>高亮效果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">Hello</span> <span class="n">world</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.codeblock代码块</p>

<p>这个效果与三个反引号的效果类似，只是写法不如反引号简便。格式如下：</p>

<pre><code>{ % codeblock [title] [lang:language] [url] [link text] %}
code snippet
{ % endcodeblock %}
</code></pre>

<p>高亮效果：</p>

<figure class='code'><figcaption><span>HelloWorld.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Hello world!&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Octopress还支持引用Github上的gist，见<a href="http://octopress.org/docs/blogging/code/">官方文档</a>。</p>

<h2>插入图片</h2>

<p>将图片放到<code>octopress/source/images/</code>下，然后在Markdown文件中直接引用即可。也可以直接引用网络上的图片。</p>

<p>为了方便管理，可以在images下对自己添加的图片建立目录区分，比如：<code>images/2013/12</code>。</p>

<p>语法与插入超链接类似：</p>

<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg "Optional title")
</code></pre>

<ul>
<li>半角叹号</li>
<li>半角方括号，里面放图片的替代文字</li>
<li>半角圆括号，里面放图片的网址，后面可选地加上文字。</li>
</ul>


<h2>添加分类</h2>

<p>此节参考了这篇文章：<a href="http://codemacro.com/2012/07/18/add-category-list-to-octopress/">为octopress添加分类(category)列表</a></p>

<p><code>rake new_post</code>生成的markdown文件中包含了<code>categories:</code>，在后面加上<code>[分类名]</code>就可以指定该文章的分类。下面说的是怎么使得分类能在博客侧边栏显示。</p>

<h3>添加category_list插件，保存下面的代码到<code>octopress/plugins/category_list_tag.rb</code>:</h3>

<figure class='code'><figcaption><span>category_list_tag.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&lt;</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Tag</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>      <span class="n">html</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>      <span class="n">categories</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'>      <span class="n">categories</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">category</span><span class="o">|</span>
</span><span class='line'>        <span class="n">posts_in_category</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">[</span><span class="n">category</span><span class="o">].</span><span class="n">size</span>
</span><span class='line'>        <span class="n">category_dir</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">config</span><span class="o">[</span><span class="s1">&#39;category_dir&#39;</span><span class="o">]</span>
</span><span class='line'>        <span class="n">category_url</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">category_dir</span><span class="p">,</span> <span class="n">category</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/_|\P{Word}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/-{2,}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">downcase</span><span class="p">)</span>
</span><span class='line'>        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;&lt;li class=&#39;category&#39;&gt;&lt;a href=&#39;/</span><span class="si">#{</span><span class="n">category_url</span><span class="si">}</span><span class="s2">/&#39;&gt;</span><span class="si">#{</span><span class="n">category</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">posts_in_category</span><span class="si">}</span><span class="s2">)&lt;/a&gt;&lt;/li&gt;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">html</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;category_list&#39;</span><span class="p">,</span> <span class="ss">Jekyll</span><span class="p">:</span><span class="ss">:CategoryListTag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>增加到侧边栏</h3>

<p>保存以下代码到<code>source/_includes/custom/asides/category_list.html</code></p>

<figure class='code'><figcaption><span>category_list.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Categories<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;categories&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    { % category_list %}
</span><span class='line'>  <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>修改<code>_config.yml</code>的<code>default_asides</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>default_asides: [custom/asides/category_list.html]
</span></code></pre></td></tr></table></div></figure>


<h2>添加标签</h2>

<p>见<a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">为octopress添加tag Cloud</a></p>

<h2>修改样式</h2>

<p>见<a href="http://812lcl.github.io/blog/2013/10/27/octopresszhu-ti-yang-shi-xiu-gai/">Octopress主题样式修改</a></p>

<h2>让搜索引擎收录你的博客</h2>

<p>有了自己的博客，当然希望博文的内容能被大家搜索到。但是刚开始，搜索引擎不一定抓取了你的博客，想要尽快让引擎收录，直接提交你的博客网址到各大搜索引擎即可。然后等待网络蜘蛛抓取吧，生效时间不定的。</p>

<ul>
<li>百度：<a href="http://zhanzhang.baidu.com/sitesubmit/index">http://zhanzhang.baidu.com/sitesubmit/index</a></li>
<li>谷歌：<a href="https://www.google.com/webmasters/tools/submit-url?pli=1">https://www.google.com/webmasters/tools/submit-url?pli=1</a></li>
</ul>


<h2>可能遇到的问题</h2>

<ul>
<li><code>rake preview</code>后看不到最新效果。解决方法：检查一下Markdown文件是不是有无法解析的语句。最容易发生的是，引用了代码片段，但是使用了pygement无法解析的语言；又或者代码片段内部含有代码高亮的关键字，如<code>{ %</code>。</li>
<li>侧边栏布局混乱，跑到博客底部。也是代码解析出错引起的，同上。定位出问题的代码很简单，用二分法剪切markdown文件，保存，查看预览，看看是不是还有问题，逐步缩小范围就可以看出是哪一句引起的了。</li>
</ul>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2013/12/05/config-the-octopress-blog-after-deployed/'>http://blog.lessfun.com/blog/2013/12/05/config-the-octopress-blog-after-deployed/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[免费获得比特币的方法汇总]]></title>
    <link href="http://blog.lessfun.com/blog/2013/12/01/get-free-bitcoin/"/>
    <updated>2013-12-01T19:12:20+08:00</updated>
    <id>http://blog.lessfun.com/blog/2013/12/01/get-free-bitcoin</id>
    <content type="html"><![CDATA[<p>随着比特币价格的不断升高，可以免费获得比特币的网站也越来越少，或者获得的比特币数量少得可怜。不过，天无绝人之路，目前还是有少数网站提供免费的比特币的。</p>

<h2>1.注册网站，赠送比特币</h2>

<ul>
<li><a href="https://www.chbtc.com/a/71688">比特币中国</a>：注册，完成邮箱验证，可以获得0.0005BTC；完成手机验证，可获得0.0005BTC。0.01BTC可提现。</li>
<li><a href="http://www.huanle95.com/btc?r=1552">欢乐95</a>：注册赠送800积分，每天登录有100积分，在通过欢乐95在各大网上商城购买商品，还可以获得大量积分，适合网购达人。13积分=1uBTC。</li>
<li><a href="https://www.huobi.com/?a=regist_gift&amp;utm_source=273899">火币网</a>：注册并且完善个人信息后，可以参与抽奖，中奖数额为0.001-1个比特币。0.01BTC可提现。</li>
<li><a href="http://www.okcoin.com/?invite=3266148">OKCoin</a>：注册并绑定手机、设定交易密码即可获得0.001BTC。</li>
</ul>


<p>注意：比特币中国和OKCoin的最新公告显示，由于最近虚假注册用户数太多，暂停送币活动%>_&lt;%。</p>

<h2>2.点击广告，获得比特币</h2>

<p>只推荐比较靠谱大方的两个：</p>

<ul>
<li><a href="https://coinad.com/?r=RYVGMPXZ0EPO313">Coinad</a>：注册一个账号，设定自己的比特币地址，在<code>View ads</code>页面可以看到可点击的广告以及点击一个广告可以获得多少比特币。每天的广告数量有限。比特币累积到0.0003后可以提现。</li>
<li><a href="http://btcclicks.com/?r=54820e59">BtcClicks</a>：注册一个账号，设定自己的比特币地址，在<code>Surf Ads</code>查看可点击的广告。0.001BTC可提现。</li>
</ul>


<!--more-->


<h2>3.添加广告，点击量转换为比特币</h2>

<p>如果你有个人网站，可以到下面地址注册一个账号，获取广告地址，然后复制到你的个人网站，别人点击一次你就会获得0.00000157BTC，好吧，小数点后面的0真是让人绝望！！！</p>

<p>值得一提的是，注册即赠送0.01BTC，不过要0.2个才能提现…</p>

<ul>
<li><a href="http://aff.4bc.co/1475.html">http://aff.4bc.co</a></li>
</ul>


<h2>4.挂网页，或者摇号中奖</h2>

<ul>
<li><a href="http://www.landofbitcoin.com/?r=G0aNDpMAGoOx0GjV">LandOfBitcoin</a>：打开网页即可，右上角可以看到不断增加的余额，半分钟左右增加0.00000001BTC，聊胜于无。</li>
<li><a href="http://freebitco.in/?op=home">FreeBitcoin</a>：每个小时输一次验证码，得到多少比特币看运气，一般都有0.0000015-0.0000025个。</li>
</ul>


<h2>5.输验证码，累积比特币</h2>

<p>以下网站每半个小时可以输入验证码和比特币地址，获取的比特币汇总到coinbox.me，可以通过<a href="http://www.coinbox.me/?a=your_bitcoin_address">http://www.coinbox.me/?a=your_bitcoin_address</a> 查看你已经累积了多少比特币，0.000055个后会自动发送到你的比特币钱包。</p>

<p>这个实在是体力活，请注意保护眼睛：</p>

<ul>
<li><a href="http://www.btc4you.com/index.php">http://www.btc4you.com/index.php</a></li>
<li><a href="http://www.greencoins.org/">http://www.greencoins.org/</a></li>
<li><a href="http://www.rawbitcoins.com/">http://www.rawbitcoins.com/</a></li>
<li><a href="http://www.thefreebitcoins.com/">http://www.thefreebitcoins.com/</a></li>
<li><a href="http://www.faucetbtc.com/">http://www.faucetbtc.com/</a></li>
<li><a href="http://www.freebtc4all.com/">http://www.freebtc4all.com/</a></li>
<li><a href="http://www.btcmine.net/">http://www.btcmine.net/</a></li>
<li><a href="http://www.srbitcoin.com/">http://www.srbitcoin.com/</a></li>
<li><a href="http://www.freebitcoins.me/">http://www.freebitcoins.me/</a></li>
<li><a href="http://btcflow.net/">http://btcflow.net/</a></li>
<li><a href="http://www.bitcoinspain.net/">http://www.bitcoinspain.net/</a></li>
<li><a href="http://bitcoins4free.me/">http://bitcoins4free.me/</a></li>
<li><a href="http://www.freebitcoins4u.com/">http://www.freebitcoins4u.com/</a></li>
<li><a href="http://www.fr33bitcoins.com/">http://www.fr33bitcoins.com/</a></li>
<li><a href="http://www.elbitcoingratis.es/">http://www.elbitcoingratis.es/</a></li>
<li><a href="http://www.virtualfaucet.com/">http://www.virtualfaucet.com/</a></li>
<li><a href="http://www.bitcats.net/">http://www.bitcats.net/</a></li>
<li><a href="http://www.nioctib.net/">http://www.nioctib.net/</a></li>
<li><a href="http://www.thebitcoin.me/">http://www.thebitcoin.me/</a></li>
<li><a href="http://bitcointree.net/">http://bitcointree.net/</a></li>
<li><a href="http://hotswap.co/faucet/">http://hotswap.co/faucet/</a></li>
<li><a href="http://www.bithits.info/">http://www.bithits.info/</a></li>
</ul>


<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2013/12/01/get-free-bitcoin/'>http://blog.lessfun.com/blog/2013/12/01/get-free-bitcoin/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Octopress在Github搭建博客，并绑定独立域名]]></title>
    <link href="http://blog.lessfun.com/blog/2013/11/27/create-blog-in-github-page-using-octopress-and-binding-domain/"/>
    <updated>2013-11-27T01:45:36+08:00</updated>
    <id>http://blog.lessfun.com/blog/2013/11/27/create-blog-in-github-page-using-octopress-and-binding-domain</id>
    <content type="html"><![CDATA[<p>11月中旬在Godaddy购买了一个域名，一直没派上用场，想到经常在各个个人博客找到各种问题的解决方案，于是决定先成立一个博客，记录并分享一些浮生小记、程序问题、解决方案，顺便在互联网上表示，“来过”。</p>

<p>这是第一篇博文，记录一下使用Octopress搭建博客，发布到Github Pages免费空间，并绑定个人域名的步骤。</p>

<h2>概述</h2>

<h3>什么是Github Pages</h3>

<p><a href="http://pages.github.com/">Github Pages</a> Github提供的一个免费空间，拥有一个独立的二级域名，允许开发者提交静态网页文件，用于介绍自己，或者自己的开源项目，可以看作是个人或项目主页。每个Pages有300M的存储空间，于是很多人就当作个人博客来发布博文。特点：</p>

<ul>
<li>轻量级，配置简单</li>
<li>无需自己提供空间</li>
<li>使用标记语言，如Markdown</li>
<li>可以绑定独立域名</li>
</ul>


<h3>什么是Octopress</h3>

<p>从<a href="http://octopress.org/">Octopress主页</a>上的标语“A blogging framework for hackers”就可以看出，这是一个比较Geek的博客系统，提供了一套自动化的工具和模板，帮助用户简便地创建一个博客。</p>

<p>Octopress生成的博客可以很方便地部署到Github Pages上，网上已有很多教程介绍怎么利用Octopress在Github上搭建博客。不过，由于生成的博客都是静态文件，所以也可以部署到任何一个服务器上。随着Wordpress越来越臃肿庞大，相对而言更加方便快捷的Octopress则日渐流行。特点：</p>

<ul>
<li>以Ruby为运行环境，使用简单的命令生成静态页面</li>
<li>默认使用Markdown语法</li>
<li>可离线编写博文，方便备份、预览</li>
<li>可从Wordpress迁移过来</li>
</ul>


<h2>安装</h2>

<!--more-->


<h3>安装Git</h3>

<p>以Mac系统为例，安装Git的方法有很多，这里只说两种：</p>

<ol>
<li>下载<a href="https://code.google.com/p/git-osx-installer/">git-osx-installer</a>安装包，使用Gui安装。</li>
<li>使用Homebrew的包管理工具，命令行安装。</li>
</ol>


<p>前者无需多说，后者的命令如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo brew install git
</span></code></pre></td></tr></table></div></figure>


<p>安装后，运行下面命令查看是否成功：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>which git    
</span></code></pre></td></tr></table></div></figure>


<p>应该得到/usr/bin/git，说明已成功安装git。</p>

<h3>安装Rvm和Ruby</h3>

<p>安装Rvm：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby
</span></code></pre></td></tr></table></div></figure>


<p>安装Ruby1.9.3(或更新版本)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install ruby-2.0.0-p353  <span class="o">&amp;&amp;</span> rvm use ruby-2.0.0-p353
</span><span class='line'>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://octopress.org/docs/setup/rvm/">官方文档</a>建议安装1.9.3版本，不过我安装的是2.0.0，一样可用。</p>

<h3>安装Octopress</h3>

<p>按官方文档<a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a>操作即可，下面简述步骤，及可能会出现的问题。</p>

<p>利用终端，或Finder在本地建立一个用于存放Octopress的文件夹，并在终端切换到该目录，然后按以下步骤操作。</p>

<p>1)从Github将源码clone下来：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<p>2)安装依赖：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash    <span class="c"># If you use rbenv, rehash to be able to run the bundle command</span>
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>这里可能会很慢，因为国内访问官方的ruby更新源速度奇慢……解决方法是，修改gem更新源地址。输入以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem sources -a http://ruby.taobao.org/
</span><span class='line'>gem sources -r http://rubygems.org/
</span><span class='line'>gem sources -l
</span></code></pre></td></tr></table></div></figure>


<p>然后更改Octopress目录下的<code>Gemfile</code>文件，将<code>source "http://rubygems.org/"</code> 改为 <code>source "http://ruby.taobao.org/"</code>，保存，再运行<code>2)安装依赖</code>的命令就一气呵成了。</p>

<p>3)安装默认主题</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<p>4)测试。
这时已经安装成功了，下面两天命令可以生成本地静态页面并在4000端口启动预览：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>打开浏览器输入<a href="http://localhost:4000">http://localhost:4000</a>就可以看到预览页面了。</p>

<h2>部署</h2>

<p>下面介绍怎么将本地博客发布到Github Pages上。</p>

<h3>创建Github Pages</h3>

<h4>注册github账号</h4>

<p>首先我们得注册一个github账号，如果不打算绑定独立域名的话，这个账号就是你github pages的域名，如：yourname.github.io，所以要考虑好账号名。注册地址：<a href="https://github.com/join">https://github.com/join</a></p>

<h4>创建git repository</h4>

<p>注册后，创建一个名为yourname.github.com的代码仓库，yourname是你的帐号名，不要省略后面的<code>.github.com</code>。</p>

<h4>设置博客使用的git repository的路径</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'> <span class="nv">$ </span>rake setup_github_pages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository<span class="o">(</span>For example, <span class="s1">&#39;git@github.com:your_username/your_username.github.io.git) or &#39;</span>https://github.com/your_username/your_username.github.io<span class="err">&#39;</span><span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>Repository url:
</span></code></pre></td></tr></table></div></figure>


<p>这里会提示让你输入刚才创建的代码仓库地址，请输入：<code>git@github.com:yourname/yourname.github.com.git</code></p>

<p>这个步骤，rake会做以下事情：</p>

<ol>
<li>修改.git/config中的origin为你输入的repos，并把原来的origin写到Octopress中。</li>
<li>创建source分支并切换到该分支。</li>
<li>在生成的_deploy目录下初始化git repos</li>
</ol>


<h4>设置SSH key</h4>

<p>1)终端输入：</p>

<pre><code> ssh-keygen -t rsa -C "yourname@mail.com" #输入你的注册邮箱
</code></pre>

<p>2)按照提示输入两次短语：</p>

<pre><code>Generating public/private rsa key pair.
Enter file in which to save the key (/Users/name/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
</code></pre>

<p>回车后，会看到：</p>

<pre><code>Your public key has been saved in /Users/name/.ssh/id_rsa.pub.
</code></pre>

<p>3)打开id_ras.pub文件，复制里面的内容，等一下会用到。</p>

<p>4)登录github，在右上角用户名旁找到“设置”图标，点击进入设置页面进入<code>SSH Public Keys</code>，</p>

<p>5)点击右边的<code>Add another public key</code></p>

<p>6)在Title输入名称，在Key粘贴刚才自己复制的公钥，点击<code>Add key</code>即可。</p>

<p>7)输入以下命令测试ssh：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh -T git@github.com
</span></code></pre></td></tr></table></div></figure>


<p>将会看到下面输出：</p>

<p>he authenticity of host &lsquo;github.com (192.30.252.128)&rsquo; can&rsquo;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?</p>

<p>输入yes，回车，就会看到：</p>

<p>Hi yourname! You&rsquo;ve successfully authenticated, but GitHub does not provide shell access.</p>

<p>8)设置个人信息</p>

<pre><code>$ git config --global user.name "yourname"
$ git config --global user.email "yourname@mail.com"
</code></pre>

<p>创建好yourname.github.io项目之后，提交一个index.html文件，然后push到Github的master分支。第一次页面生效需要大概10分钟左右。生效之后，访问yourname.github.io就可以看到你上传的页面了。</p>

<h3>配置Octopress</h3>

<h4>标题与副标题</h4>

<p>打开_config.yml，按照注释，修改主页的配置。</p>

<p>如果需要每次更改后都重新生成，添加一行：</p>

<pre><code>auto: true
</code></pre>

<p>可以参考唐巧的博文《<a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a>》,删除Twitter相关的配置和会拖慢访问速度的Google字体。</p>

<h4>修改主题</h4>

<p>比如，想要使用<a href="https://github.com/amelandri/darkstripes">darkstripes</a>主题，切换到Octopress目录，使用如下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git://github.com/amelandri/darkstripes.git .themes/darkstripes
</span><span class='line'><span class="nv">$ </span>rake install<span class="o">[</span><span class="s1">&#39;darkstripes&#39;</span><span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>rake generate
</span></code></pre></td></tr></table></div></figure>


<h2>撰写并发布博文</h2>

<p>1)创建第一篇博文</p>

<p>这时候我们的部署已经完成，可以创建自己的第一篇博文了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake new_post<span class="o">[</span><span class="s2">&quot;My first blog&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>这会在source/_posts下创建一个以时间和标题为名称的markdown文件，这就是创建的第一篇博文。</p>

<p>2)编辑文章</p>

<p>也就是修改source/_posts下的.markdown文件。可以使用自己喜欢的编辑器，比如Vim，或者Mou，和Sublime text2之类。</p>

<p>3)预览和发布
输入以下命令，访问<a href="http://localhost:4000">访问 http://localhost:4000</a>查看预览。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>觉得没有问题之后，发布：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake gen_deploy
</span></code></pre></td></tr></table></div></figure>


<p>这个命令会生成页面到_deploy并提交代码到repos，如果一切顺利，十分钟左右就可以在<a href="http://yourname.github.com">http://yourname.github.com</a> 或<a href="http://yourname.github.io">http://yourname.github.io</a> 访问你的博客主页了。</p>

<p>4)保存更改，提交source</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Source code of my blog&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>5)总结一下写博客的流程：</p>

<ul>
<li>rake new_post[&ldquo;Title&rdquo;]，生成博文模板，修改生成的Markdown文件。</li>
<li>rake generate，生成静态文件</li>
<li>rake preview，在本机4000端口生成预览</li>
<li>rake deploy，发布</li>
</ul>


<h2>绑定域名</h2>

<p>要想让username.github.io能通过你自己的域名来访问，需要在项目的根目录下新建一个名为CNAME的文件，文件内容形如：yourdomain.com
你也可以绑定在二级域名上：blog.yourdomain.com</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;blog.yourdomain.com&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</span></code></pre></td></tr></table></div></figure>


<p>然后在你的DNS服务商，添加相应的CNAME指向yourname.github.com。
如果你使用形如yourdomain.com这样的一级域名的话，需要在DNS处设置A记录到207.97.227.245（地址可以在<a href="https://help.github.com/articles/my-custom-domain-isn-t-working">这里</a>查看），而不是在DNS处设置为CNAME的形式。设置成功后，等待生效即可。</p>

<p>详见：<a href="http://octopress.org/docs/deploying/github/#custom_domains">http://octopress.org/docs/deploying/github/#custom_domains</a></p>

<h2>第三方插件</h2>

<h3>添加多说评论插件</h3>

<p>首先我们需要有一个多说网的short_name，在后面的配置中需要用到。于是我们就得先注册一个多说网的账号。</p>

<h4>注册多说short_name</h4>

<p>这里顺便吐槽一下多说网的交互。它不提供注册功能，只能绑定微博、豆瓣等现有账号，好吧，我绑定了微博，然后登录，发现坑爹了!</p>

<p><a href="http://dev.duoshuo.com/threads/4ff28d95552860f21f000010">官方文档</a>说<code>修改您的多说二级域名：（在多说后台设置中找到）</code>，但是我在设置页面转了一圈，根本没找到可以设置或者创建short_name的地方！！！找遍了各个可以点击的链接，硬是没发现什么后台管理、域名设置的地方。</p>

<p>无奈之下，用了万能的Google，然后找到了<a href="http://blog.puhao.me/%E5%90%90%E6%A7%BD/%E4%BD%BF%E7%94%A8%E5%A4%9A%E8%AF%B4/">这个博客</a>，他也在吐槽不断地点击后，才找到了设置页面：<a href="http://duoshuo.com/create-site/">获取多说通用代码</a>，按照要求设置即可，复制它生成的通用代码。</p>

<h4>添加多说模块到Octopress模板</h4>

<p>1)在<code>source/_inludes/post/</code>下创建duoshuo.html:
粘贴生成的通用代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- Duoshuo Comment BEGIN --&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;ds-thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">duoshuoQuery</span> <span class="o">=</span> <span class="p">{</span><span class="nx">short_name</span><span class="o">:</span><span class="s2">&quot;your_short_name&quot;</span><span class="p">};</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ds</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">ds</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span><span class="nx">ds</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">ds</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">ds</span><span class="p">.</span><span class="nx">charset</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>  <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ds</span><span class="p">);</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Duoshuo Comment END --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2)在<code>source/_layouts/post.html</code>，在disqus代码下方添加：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>    { % if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Comments<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;comments&quot;</span> <span class="na">aria-live=</span><span class="s">&quot;polite&quot;</span><span class="nt">&gt;</span>{ % include post/duoshuo.html %}<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>    { % endif %}
</span></code></pre></td></tr></table></div></figure>


<p>3)修改<code>source/_includes/article.html</code>文件，在disqus代码下方添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{ % if site.duoshuo_short_name and page.comments != false and post.comments != false and site.duoshuo_comments == true %}| <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;{ % if index % }{ % endif %}#comments&quot;</span><span class="nt">&gt;</span>Comments<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>{ % endif %}
</span></code></pre></td></tr></table></div></figure>


<p>4)在<code>_config.yml</code>中添加：</p>

<pre><code># duoshuo comments
duoshuo_comments: true
duoshuo_short_name: yourname
</code></pre>

<p>这时候应该就成功添加多说模块了。</p>

<h4>首页侧边栏显示最新评论</h4>

<p>1)在<code>_config.yml</code>中插入如下代码</p>

<pre><code>duoshuo_asides_num: 10      # 侧边栏评论显示条目数
duoshuo_asides_avatars: 0   # 侧边栏评论是否显示头像
duoshuo_asides_time: 1      # 侧边栏评论是否显示时间
duoshuo_asides_title: 1     # 侧边栏评论是否显示标题
duoshuo_asides_admin: 0     # 侧边栏评论是否显示作者评论
duoshuo_asides_length: 20   # 侧边栏评论截取的长度
</code></pre>

<p>2)再创建<code>source/_includes/custom/asides/recent_comments.html</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>最近评论<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;ds-recent-comments&quot;</span> <span class="na">data-num-items=</span><span class="s">&quot;10&quot;</span> <span class="na">data-show-avatars=</span><span class="s">&quot;1&quot;</span> <span class="na">data-show-time=</span><span class="s">&quot;1&quot;</span> <span class="na">data-show-title=</span><span class="s">&quot;1&quot;</span> <span class="na">data-show-admin=</span><span class="s">&quot;1&quot;</span> <span class="na">data-excerpt-length=</span><span class="s">&quot;20&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'><span class="c">&lt;!--多说js加载开始，一个页面只需要加载一次 --&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">duoshuoQuery</span> <span class="o">=</span> <span class="p">{</span><span class="nx">short_name</span><span class="o">:</span><span class="s2">&quot;your_duoshuo_name&quot;</span><span class="p">};</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">ds</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">ds</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">ds</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span><span class="nx">ds</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">ds</span><span class="p">.</span><span class="nx">charset</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)</span> <span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ds</span><span class="p">);</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!--多说js加载结束，一个页面只需要加载一次 --&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3)打开<code>_config.yml</code>将custom/asides/recent_comments.html添加到<code>default_asides</code>:</p>

<pre><code>[custom/asides/recent_comments.html]
</code></pre>

<h4>给网站添加访问分析 Google Analytics</h4>

<p>1)到<a href="https://www.google.com/analytics">Google Analytics</a>注册GA账户，登记网站名字、地址，获得自己的Track ID，格式如：US-1234XXXX-X</p>

<p><strong>注册GA的网址应与你在<code>_config.yml</code>中url的设置一致。</strong></p>

<p>2)修改<code>_config.xml</code>，将ID写到<code>google_analytics_tracking_id:</code>后。</p>

<p>3)<code>rake deploy</code>。然后就可以到Google Analytics看报告了。</p>

<h4>添加About Me到侧边栏</h4>

<p>1)修改<code>source/_includes/custom/asides</code>里面的<code>about.html</code>，内容如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>About Me<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Your Introduce<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2)修改<code>_config.yml</code>，在<code>default_asides</code>加入<code>custom/asides/about.html</code></p>

<h2>参考</h2>

<ol>
<li>Mac下的Markdown文件编辑器: <a href="http://mouapp.com">Mou</a></li>
<li>唐巧的博客: <a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a></li>
<li>觅珠人: <a href="http://tchen.me/posts/2012-12-16-first-blog.html">第一篇博文：用Octopress搭建博客系统</a></li>
<li>破船之家: <a href="http://beyondvincent.com/blog/2013/07/27/107-hello-page-of-github/">你好！github页面</a></li>
<li>opoo.org: <a href="http://opoo.org/octopress/">Octopress 博客系统 —— a Blogging Framework for Hackers</a></li>
<li>Ocotpress: <a href="http://octopress.org/docs/">Octopress Documentation</a></li>
<li>Havee&rsquo;s Space: <a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">为 Octopress 添加多说评论系统</a></li>
<li>colors4.us: <a href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/">Octopress博客从零开始 III</a></li>
</ol>


<p>(全文完)</p>

<blockquote class='post_original_block'>
            原文作者：
            <a href='http://blog.lessfun.com'>lslin</a><br/>
            原文链接：
            <a href='http://blog.lessfun.com/blog/2013/11/27/create-blog-in-github-page-using-octopress-and-binding-domain/'>http://blog.lessfun.com/blog/2013/11/27/create-blog-in-github-page-using-octopress-and-binding-domain/</a><br/>
            版权声明：自由转载-非商用-非衍生-保持署名 | 
            <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a>
            </blockquote>

]]></content>
  </entry>
  
</feed>
