<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SublimeText | 浮生猎趣]]></title>
  <link href="http://blog.lessfun.com/blog/categories/sublimetext/atom.xml" rel="self"/>
  <link href="http://blog.lessfun.com/"/>
  <updated>2017-08-16T14:11:58+08:00</updated>
  <id>http://blog.lessfun.com/</id>
  <author>
    <name><![CDATA[lslin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[为 Sublime Text 自定义 Log 语法高亮]]></title>
    <link href="http://blog.lessfun.com/blog/2016/10/28/make-a-custom-syntax-highlighting-for-sublime-text/"/>
    <updated>2016-10-28T15:53:44+08:00</updated>
    <id>http://blog.lessfun.com/blog/2016/10/28/make-a-custom-syntax-highlighting-for-sublime-text</id>
    <content type="html"><![CDATA[<p>近日，代码写得越来越少，大部分时间都用来查 Bug 了，而查 Bug 的大部分时间里，是在看崩溃报告和用户日志。</p>

<p>有过看 Log 经历的人都知道，Log 到看时方恨少，对着十多兆的日志文件，满屏幕的文本信息，却找不到自己想要的那个关键点的记录，这是极其让人崩溃的。于是，看代码和写代码的时候都会下意识地在关键路径都打上 Log，宁可错打一千，不可放过一条。几次下来， Log 文件越来越大，看 Log 越来越累……如果逼不得已非得要大海捞针，那就让捞针这个过程更方便一些吧，这时候，关键字过滤以及高亮的需求随之而来。</p>

<p>软件界的神器之所以能成为神器，除了其本身功能突出之外，很大部分原因是它支持各种定制，能方便地添加插件或扩展，比如 Vim，Alfred，Chrome，等等。Sublime Text 也毫不例外地支持插件和自定义。本文要说的就是如何为 Log 文本文件添加自定义的语法高亮。</p>

<!--more-->


<h2>1. 创建自定义语法高亮文件</h2>

<h3>1.1 安装 Package Control</h3>

<p><a href="https://packagecontrol.io/installation">Package Control</a> 是 Sublime Text 的插件管理器，其本身也是一个插件，通过 Package Control 能很方便地查找、安装、卸载插件。</p>

<h3>1.2 安装 PackageDev 插件</h3>

<p><a href="https://github.com/SublimeText/PackageDev">PackageDev</a> 是一款快速创建 Sublime Text 的语法定义、片段等扩展文件的插件。</p>

<h3>1.3 创建语法文件</h3>

<p>安装 PackageDev 后，通过<code>Tools | Packages | Package Development | New Syntax Definition</code> 菜单，创建一个新的语法文件。</p>

<p>这时候，会自动新建一个空模板：</p>

<p>``` yaml</p>

<h1>[PackageDev] target_format: plist, ext: tmLanguage</h1>

<hr />

<p>name: Syntax Name
scopeName: source.syntax_name
fileTypes: []
uuid: 516bc7ff-03be-4474-a398-b83e20204594</p>

<h2>patterns:</h2>

<p>&hellip;
```</p>

<h3>1.4 定义语法高亮规则</h3>

<p>包括设置语法名、后缀名、需要匹配的关键字、使用什么语法高亮关键字，等等。如下所示：</p>

<p>``` yaml</p>

<h1>[PackageDev] target_format: plist, ext: tmLanguage</h1>

<hr />

<p>name: MyLog
scopeName: text.mylog
fileTypes: [mylog]
uuid: 516bc7ff-03be-4474-a398-b83e20204594</p>

<p>patterns:
&ndash; comment: Keyword
  name: keyword.other.mylog
  match: \b(INFO|Info|WARN|Warn|ERROR|Error)\b</p>

<ul>
<li><p>comment: Number
name: constant.numeric.mylog
match: \b((\d<em>)|(0x[0-9a-zA-Z]</em>))\b</p></li>
<li><p>comment: Funtion
name: support.function.mylog
match: ([&ndash;+])([.*?])</p></li>
<li><p>comment: Crash Error
name: string.regexp.log
match: (\b(CRASH|Crash|crash|WARNING|Warning|warning|FAIL|Fail|fail)\b.*)
&hellip;
```</p></li>
</ul>


<p>点击保存，在 <code>Packages/User/</code> 目录下创建一个 <code>MyLog</code> 文件夹，文件名改为 <code>MyLog.YAML-tmLanguage</code>，保存到 <code>MyLog</code> 文件中。</p>

<p>语法的定义可以参考<a href="http://docs.sublimetext.info/en/latest/reference/syntaxdefs.html">官方文档</a>。</p>

<p>匹配的关键字的 <code>name</code> 的定义，见<a href="https://manual.macromates.com/en/language_grammars#naming_conventions">这里</a>。</p>

<h3>1.5 保存为 tmLanguage 文件</h3>

<p>上面的 YAML 文件提高了可读性，但为了让 Sublime Text 能识别，还需要转换为 tmLanguage 文件。</p>

<p>编辑完并保存 YAML 后，点击 <code>Tools | Build System | Convert to</code> ，或者按 <code>Ctrl(CMD) + B</code> 把 YAML 文件转为 <code>tmLanguage</code>，这时应该会自动保存到 Sublime Text 的配置文件夹中 <code>Packages/User/MyLog/MyLog.tmLanguage</code>：</p>

<p>``` xml
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?>
&lt;!DOCTYPE plist PUBLIC &ldquo;&ndash;//Apple Computer//DTD PLIST 1.0//EN&rdquo; &ldquo;<a href="http://www.apple.com/DTDs/PropertyList-1.0.dtd">http://www.apple.com/DTDs/PropertyList-1.0.dtd</a>&rdquo;>
<plist version="1.0">
<dict></p>

<pre><code>&lt;key&gt;fileTypes&lt;/key&gt;
&lt;array&gt;
    &lt;string&gt;mylog&lt;/string&gt;
&lt;/array&gt;
&lt;key&gt;name&lt;/key&gt;
&lt;string&gt;MyLog&lt;/string&gt;
&lt;key&gt;patterns&lt;/key&gt;
&lt;array&gt;
    &lt;dict&gt;
        &lt;key&gt;comment&lt;/key&gt;
        &lt;string&gt;Keyword&lt;/string&gt;
        &lt;key&gt;match&lt;/key&gt;
        &lt;string&gt;\b(INFO|Info|WARN|Warn|ERROR|Error)\b&lt;/string&gt;
        &lt;key&gt;name&lt;/key&gt;
        &lt;string&gt;keyword.other.mylog&lt;/string&gt;
    &lt;/dict&gt;
    &lt;dict&gt;
        &lt;key&gt;comment&lt;/key&gt;
        &lt;string&gt;Number&lt;/string&gt;
        &lt;key&gt;match&lt;/key&gt;
        &lt;string&gt;\b((\d*)|(0x[0-9a-zA-Z]*))\b&lt;/string&gt;
        &lt;key&gt;name&lt;/key&gt;
        &lt;string&gt;constant.numeric.mylog&lt;/string&gt;
    &lt;/dict&gt;
    &lt;dict&gt;
        &lt;key&gt;comment&lt;/key&gt;
        &lt;string&gt;Funtion&lt;/string&gt;
        &lt;key&gt;match&lt;/key&gt;
        &lt;string&gt;([-+])(\[.*?\])&lt;/string&gt;
        &lt;key&gt;name&lt;/key&gt;
        &lt;string&gt;support.function.mylog&lt;/string&gt;
    &lt;/dict&gt;
    &lt;dict&gt;
        &lt;key&gt;comment&lt;/key&gt;
        &lt;string&gt;Crash Error&lt;/string&gt;
        &lt;key&gt;match&lt;/key&gt;
        &lt;string&gt;(\b(CRASH|Crash|crash|WARNING|Warning|warning|FAIL|Fail|fail)\b.*)&lt;/string&gt;
        &lt;key&gt;name&lt;/key&gt;
        &lt;string&gt;string.regexp.log&lt;/string&gt;
    &lt;/dict&gt;
&lt;/array&gt;
&lt;key&gt;scopeName&lt;/key&gt;
&lt;string&gt;text.mylog&lt;/string&gt;
&lt;key&gt;uuid&lt;/key&gt;
&lt;string&gt;516bc7ff-03be-4474-a398-b83e20204594&lt;/string&gt;
</code></pre>

<p></dict>
</plist></p>

<p>```</p>

<p>此后，使用 Sublime Text 打开一个后缀名 <code>.mylog</code> 的文件，或者打开 <code>Plain Text</code> 类型的文件然后设置 <code>Syntax</code> 为 <code>MyLog</code> 类型，就可以看到高亮的效果了。如图：</p>

<p><img src="/images/2016/10/sublime_text_custom_syntax_highlighting.gif" alt="sublime text custom syntax highlighting" /></p>

<h2>2. 配合其他插件，效果更佳</h2>

<h3>2.1 Filter Lines</h3>

<p><a href="https://packagecontrol.io/packages/Filter%20Lines">Filter Lines</a> 插件能方便地过滤特定字符串到一个新的 Tab 中，支持全字匹配、正则匹配。相对于全文搜索而已，把匹配结果输出到一个全新的文件中，能更有助于查看关键信息。</p>

<h3>2.2 Log Hihhlight</h3>

<p><a href="https://packagecontrol.io/packages/Log%20Highlight">Log Highlight</a> 是专门处理 Log 高亮的插件，原理与自定义语法高亮不同。这个插件也可以自定义语法高亮，同时可定制性与功能也更强大，比如支持跳转、为警告或错误添加书签，等等，有兴趣可以使用一下。</p>
]]></content>
  </entry>
  
</feed>
